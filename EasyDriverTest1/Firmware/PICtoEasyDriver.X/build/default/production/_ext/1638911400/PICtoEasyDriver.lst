MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;====================================================================================================
                      00002 ;
                      00003 ;    Filename:      PICtoEasyDriver.asm
                      00004 ;    Date:          12/7/2015
                      00005 ;    File Version:  1.0a1
                      00006 ;    
                      00007 ;    Author:        David M. Flynn
                      00008 ;    Company:       Oxford V.U.E., Inc.
                      00009 ;    E-Mail:        dflynn@oxfordvue.com
                      00010 ;    Web Site:      http://www.oxfordvue.com/
                      00011 ;
                      00012 ;====================================================================================================
                      00013 ;    PICtoEasyDriver is a I2C interface and controller for the EasyDriver stepper driver.
                      00014 ;
                      00015 ;
                      00016 ;    History:
                      00017 ;
                      00018 ; 1.0a1   12/7/2015     Beginning to work.  Relitive mode only.
                      00019 ; 1.0d1   4/4/2015      First code. 
                      00020 ;
                      00021 ;====================================================================================================
                      00022 ; Options
                      00023 ;
                      00024 ; EasyDriver Control Bits
                      00025 ;  EN*  Enable, Low to power motor
                      00026 ;  RST* Reset, Low to reset
                      00027 ;
                      00028 ; MS1   MS2
                      00029 ;  L     L    Full Step
                      00030 ;  H     L    Half Step
                      00031 ;  L     H    Quarter Step
                      00032 ;  H     H    Eigth Step
                      00033 ;
                      00034 ;====================================================================================================
                      00035 ;====================================================================================================
                      00036 ; What happens next:
                      00037 ;   At power up the system LED will blink.
                      00038 ;
                      00039 ;
                      00040 ;====================================================================================================
                      00041 ;
                      00042 ;   Pin 1 (RA2/AN2) P2.2 I/O 2
                      00043 ;   Pin 2 (RA3/AN3) P3.2 I/O 3
                      00044 ;   Pin 3 (RA4/AN4) System LED/Switch (active low input/output)
                      00045 ;   Pin 4 (RA5/MCLR*) Vpp
                      00046 ;   Pin 5 (GND) Ground
                      00047 ;   Pin 6 (RB0) Step Direction (output)
                      00048 ;   Pin 7 (RB1/AN11/SDA1) I2C Data
                      00049 ;   Pin 8 (RB2/AN10/RX) MS2 (Output)
                      00050 ;   Pin 9 (RB3/CCP1) Pulse Output Step
                      00051 ;
                      00052 ;   Pin 10 (RB4/AN8/SLC1) I2C Clock
                      00053 ;   Pin 11 (RB5/AN7)  EN* (Output)
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00054 ;   Pin 12 (RB6/AN5/CCP2) ICSPCLK
                      00055 ;   Pin 13 (RB7/AN6) ICSPDAT
                      00056 ;   Pin 14 (Vcc) +5 volts
                      00057 ;   Pin 15 (RA6) MS1 (Output)
                      00058 ;   Pin 16 (RA7/CCP2) RST* (Output)
                      00059 ;   Pin 17 (RA0) P9.2 I/O 0
                      00060 ;   Pin 18 (RA1) P8.2 I/O 1
                      00061 ;
                      00062 ;====================================================================================================
                      00063 ;
                      00064 ;
                      00065         list    p=16f1847,r=hex,W=0     ; list directive to define processor
                      00001         LIST
                      00002 ;
                      00003 ;==========================================================================
                      00004 ;  MPASM PIC16F1847 processor include
                      00005 ; 
                      00006 ;  (c) Copyright 1999-2013 Microchip Technology, All rights reserved
                      00007 ;  Modified by DMF 11/16/2013
                      00008 ;==========================================================================
                      00009 ;
                      01163         LIST
                      01164 ;
                      00068         list
                      00069 ;
Message[303]: Program word too large.  Truncated to core size. (EFA4)
8007   2FA4           00070         __CONFIG _CONFIG1,_FOSC_INTOSC & _WDTE_OFF & _MCLRE_OFF & _IESO_OFF
                      00071 ;
                      00072 ;
                      00073 ; INTOSC oscillator: I/O function on CLKIN pin
                      00074 ; WDT disabled
                      00075 ; PWRT disabled
                      00076 ; MCLR/VPP pin function is digital input
                      00077 ; Program memory code protection is disabled
                      00078 ; Data memory code protection is disabled
                      00079 ; Brown-out Reset enabled
                      00080 ; CLKOUT function is disabled. I/O or oscillator function on the CLKOUT pin
                      00081 ; Internal/External Switchover mode is disabled
                      00082 ; Fail-Safe Clock Monitor is enabled
                      00083 ;
Message[303]: Program word too large.  Truncated to core size. (DFFF)
8008   1FFF           00084         __CONFIG _CONFIG2,_WRT_OFF & _PLLEN_ON & _LVP_OFF
                      00085 ;
                      00086 ; Write protection off
                      00087 ; 4x PLL disabled
                      00088 ; Stack Overflow or Underflow will cause a Reset
                      00089 ; Brown-out Reset Voltage (Vbor), low trip point selected.
                      00090 ; Low-voltage programming enabled
                      00091 ;
                      00092 ; '__CONFIG' directive is used to embed configuration data within .asm file.
                      00093 ; The lables following the directive are located in the respective .inc file.
                      00094 ; See respective data sheet for additional information on configuration word.
                      00095 ;
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00096         constant        oldCode=0
  0001                00097         constant        useI2CISR=1
  0001                00098         constant        useI2CWDT=1
  0000                00099         constant        useMotorTest=0
  0000                00100         constant        runTestAtStartup=0
  0001                00101         constant        UseEEParams=1
                      00102 ;
                      00103 #Define _C      STATUS,C
                      00104 #Define _Z      STATUS,Z
                      00105 ;
                      00106 ;====================================================================================================
                      00109         list
                      00110 ;
                      00111 ;
  0000003F            00112 PortADDRBits    EQU     b'00111111'
  000000C0            00113 PortAValue      EQU     b'11000000'
                      00114 ;
                      00115 #Define RA0_IO  LATA,0  ;Output
                      00116 #Define RA1_IO  LATA,1  ;Output
                      00117 #Define RA2_IO  LATA,2  ;Output
                      00118 #Define RA3_IO  LATA,3  ;Output RA3
                      00119 #Define SW1_In  PORTA,4 ;SW1/LED1
                      00120 #Define RA5_In  PORTA,5 ;unused Vpp
                      00121 #Define MS1_Out LATA,6  ;MS1 (Output)
                      00122 #Define RST_Out LATA,7  ;RST* (Output)
  00000004            00123 LED1_Bit        EQU     4       ;LED1 (Active Low Output)
                      00124 #Define LED1_Tris       TRISA,LED1_Bit  ;LED1 (Active Low Output)
                      00125 ;
  000000F8            00126 Servo_AddrDataMask      EQU     0xF8
                      00127 ;
                      00128 ;
                      00129 ;    Port B bits
  000000D2            00130 PortBDDRBits    EQU     b'11010010'     ;LEDs Out Others In
  00000004            00131 PortBValue      EQU     b'00000100'
                      00132 ;
                      00133 #Define Dir_Bit LATB,0  ;Step Direction
                      00134 #Define RB1_In  PORTB,1 ;I2C Data
                      00135 #Define MS2_Out LATB,2  ;MS2 (Output)
                      00136 #Define Step_Bit        LATB,3  ;Step Output
                      00137 #Define RB4_In  PORTB,4 ;I2C Clock
                      00138 #Define EN_ED   PORTB,5 ;EN* (Active Low Output)
                      00139 #Define RB6_In  PORTB,6 ;ICSPCLK
                      00140 #Define RB7_In  PORTB,7 ;ICSPDAT
                      00141 ;
  00000001            00142 Dir_BitMask     EQU     1
  000000FE            00143 Dir_BitIMask    EQU     b'11111110'     ;0xFE
  0000010D            00144 Dir_BitLat      EQU     LATB
                      00145 ;
                      00146 ;========================================================================================
                      00147 ;========================================================================================
                      00148 ;
                      00149 ;Constants
  000000FF            00150 All_In  EQU     0xFF
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  4

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000000            00151 All_Out EQU     0x00
                      00152 ;
                      00153 ;OSCCON_Value   EQU     b'01110010'     ;8MHz
  000000F0            00154 OSCCON_Value    EQU     b'11110000'     ;32MHz
                      00155 ;T2CON_Value    EQU     b'01001110'     ;T2 On, /16 pre, /10 post
  0000004F            00156 T2CON_Value     EQU     b'01001111'     ;T2 On, /64 pre, /10 post
  0000007D            00157 PR2_Value       EQU     .125
                      00158 ;
                      00159 ; 0.5uS res counter from 8MHz OSC
  0000000A            00160 CCP1CON_Run     EQU     b'00001010'     ;interupt but don't change the pin
  00000009            00161 CCP1CON_Clr     EQU     b'00001001'     ;Clear output on match
  00000008            00162 CCP1CON_Set     EQU     b'00001000'     ;Set output on match
                      00163 ;T1CON_Val      EQU     b'00000001'     ;PreScale=1,Fosc/4,Timer ON
  00000021            00164 T1CON_Val       EQU     b'00100001'     ;PreScale=4,Fosc/4,Timer ON
                      00165 ;
  000000B2            00166 TMR0Val EQU     0xB2    ;0xB2=100Hz, 0.000128S/Count
  00000064            00167 LEDTIME EQU     d'100'  ;1.00 seconds
  0000000A            00168 LEDErrorTime    EQU     d'10'
                      00169 ;
                      00170 ;
                      00171 ;
                      00172 ;================================================================================================
                      00173 ;***** VARIABLE DEFINITIONS
                      00174 ; there are 256 bytes of ram, Bank0 0x20..0x7F, Bank1 0xA0..0xEF, Bank2 0x120..0x16F
                      00175 ; there are 256 bytes of EEPROM starting at 0x00 the EEPROM is not mapped into memory but
                      00176 ;  accessed through the EEADR and EEDATA registers
                      00177 ;================================================================================================
                      00178 ;  Bank0 Ram 020h-06Fh 80 Bytes
                      00179 ;
                      00180         cblock  0x20 
                      00181 ;
  00000020            00182         LED_Time
  00000021            00183         LED_Count
  00000022            00184         ISRScratch
                      00185 ;
  00000023            00186         EEAddrTemp              ;EEProm address to read or write
  00000024            00187         EEDataTemp              ;Data to be writen to EEProm
                      00188 ;
  00000025            00189         Timer1Lo                ;1st 16 bit timer
  00000026            00190         Timer1Hi                ; one second RX timeiout
  00000027            00191         Timer2Lo                ;2nd 16 bit timer
  00000028            00192         Timer2Hi                ;
  00000029            00193         Timer3Lo                ;3rd 16 bit timer
  0000002A            00194         Timer3Hi                ;GP wait timer
  0000002B            00195         Timer4Lo                ;4th 16 bit timer
  0000002C            00196         Timer4Hi                ; Motor testing timer
                      00197 ;
  0000002D            00198         Flags
  0000002E            00199         SendingIdx
                      00200 ;
                      00201 ; these are saved in eeprom
  0000002F            00202         I2CAddr
  00000030            00203         MinSpd
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  5

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000031            00204         MaxSpd
                      00205 ;
  00000032            00206         SysFlags
  00000033            00207         DestinationX            ;P: Position Absolute destination
                      00208 ;
                      00209 ; Stepper Driver Variables
  00000034            00210         MotorFlagsX
  00000035            00211         MinSpeedX
  00000036            00212         MaxSpeedX
  00000037            00213         CurSpeedX
  00000038            00214         StepsToGoXLo
  00000039            00215         StepsToGoXHi
  0000003A            00216         CurrentPositionX:2
  0000003C            00217         GPIOBits                ;PORTA:0..3, SW1
                      00218 ;       
                      00219         endc
                      00220 ;
                      00221 ;MotorFlagsX Bits
  00000000            00222 InMotion        EQU     0       ;Set while motor is moving
  00000001            00223 InPosition      EQU     1       ;Set when move is done, clear to start move
  00000002            00224 RevDirection    EQU     2       ;Clr to got forward, Set to go reverse dir
                      00225 ;
                      00226         if useMotorTest
                      00227 MotorTestTmrL   EQU     Timer4Lo        ;4th 16 bit timer
                      00228 MotorTestTmrH   EQU     Timer4Hi
                      00229         endif
                      00230 ;
                      00231 #Define StartedIt       Flags,0
                      00232 #Define RunMotorTest    Flags,1
                      00233 ;
                      00234 #Define SW1_Flag        SysFlags,0
                      00235 ;
                      00236 ;
                      00237 #Define FirstRAMParam   I2CAddr
                      00238 #Define LastRAMParam    MaxSpd
                      00239 ;
                      00240         if useI2CWDT
  00000025            00241 TimerI2C        EQU     Timer1Lo
                      00242         endif
                      00243 ;
                      00244 ;================================================================================================
                      00245 ;  Bank2 Ram 120h-16Fh 80 Bytes
                      00246 ;
                      00247 ; I2C Stuff is here
                      00248 ;Note: only upper 7 bits of address are used
  00000030            00249 I2C_ADDRESS     EQU     0x30    ; Slave default address
  00000008            00250 RX_ELEMENTS     EQU     .8      ; number of allowable array elements, in this case 16
  0000000A            00251 TX_ELEMENTS     EQU     .10     ; MotorFlagsX..CurrentPositionX+1
  000000AA            00252 I2C_TX_Init_Val EQU     0xAA    ; value to load into transmit array to send to master
  000000AB            00253 I2C_RX_Init_Val EQU     0xAB    ; value to load into received data array
                      00254 ;
                      00255         cblock  0x120   
  00000120            00256         I2C_ARRAY_TX:TX_ELEMENTS        ; array to transmit to master
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  6

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000012A            00257         I2C_ARRAY_RX:RX_ELEMENTS        ; array to receive from master
                      00258         endc
                      00259 ;
                      00260 ;
                      00261 ;=======================================================================================================
                      00262 ;  Common Ram 70-7F same for all banks
                      00263 ;      except for ISR_W_Temp these are used for paramiter passing and temp vars
                      00264 ;=======================================================================================================
                      00265 ;
                      00266         cblock  0x70
  00000070            00267         Param70
  00000071            00268         Param71
  00000072            00269         Param72
  00000073            00270         Param73
  00000074            00271         Param74
  00000075            00272         Param75
  00000076            00273         Param76
  00000077            00274         Param77
  00000078            00275         Param78
  00000079            00276         Param79
  0000007A            00277         Param7A
  0000007B            00278         Param7B
  0000007C            00279         Param7C
  0000007D            00280         Param7D
  0000007E            00281         Param7E
  0000007F            00282         Param7F
                      00283         endc
                      00284 ;
                      00285 #Define INDEX_I2C       Param70 ;I2C Data Pointer
                      00286 #Define TX_DataSize     Param71
                      00287 #Define GFlags  Param72
                      00288 #Define I2C_TXLocked    Param72,0       ; Set/cleared by ISR, data is being sent
                      00289 #Define I2C_RXLocked    Param72,1       ; Set/cleared by ISR, data is being received
                      00290 #Define I2C_NewRXData   Param72,2       ; Set by ISR, The new data is here!
                      00291 ;
                      00292 ;=========================================================================================
                      00293 ;Conditions
  00000080            00294 HasISR  EQU     0x80    ;used to enable interupts 0x80=true 0x00=false
                      00295 ;
                      00296 ;=========================================================================================
                      00297 ;==============================================================================================
                      00298 ; ID Locations
8000   0001 0000 000A 00299         __idlocs        0x10A1
       0001 
                      00300 ;
                      00301 ;==============================================================================================
                      00302 ; EEPROM locations (NV-RAM) 0x00..0x7F (offsets)
                      00303         ORG     0xF000
F000   0030           00304         de      I2C_ADDRESS     ;nvI2CAddr
F001   0014           00305         de      .20     ;nvMinSpd
F002   005A           00306         de      .90     ;nvMaxSpd
                      00307 ;
                      00308         cblock  0x0000
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  7

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00309 ;
  00000000            00310         nvI2CAddr
  00000001            00311         nvMinSpd
  00000002            00312         nvMaxSpd
                      00313 ;
                      00314         endc
                      00315 ;
                      00316 #Define nvFirstParamByte        nvI2CAddr
                      00317 #Define nvLastParamByte nvMaxSpd
                      00318 ;
                      00319 ;
                      00320 ;==============================================================================================
                      00321 ;============================================================================================
                      00322 ;
                      00323 ;
                      00324         ORG     0x000   ; processor reset vector
0000   0183           00325         CLRF    STATUS
0001   018A           00326         CLRF    PCLATH
0002   2???           00327         goto    start   ; go to beginning of program
                      00328 ;
                      00329 ;===============================================================================================
                      00330 ; Interupt Service Routine
                      00331 ;
                      00332 ; we loop through the interupt service routing every 0.008192 seconds
                      00333 ;
                      00334 ;
                      00335         ORG     0x004   ; interrupt vector location
0004   0188           00336         CLRF    BSR     ; bank0
                      00337 ;
                      00338 ;
                      00339 ; Timer 2
0005   1C91           00340         BTFSS   PIR1,TMR2IF
0006   2???           00341         GOTO    TMR2_End
                      00342 ;Decrement timers until they are zero
                      00343 ; 
                      00344 ;------------------
                      00345 ; These routines run 100 times per second
                      00346 ;------------------
                      00347 ;Decrement timers until they are zero
                      00348 ; 
0007   0185           00349         CLRF    FSR0H
0008   2???           00350         call    DecTimer1       ;if timer 1 is not zero decrement
0009   2???           00351         call    DecTimer2
000A   2???           00352         call    DecTimer3
000B   2???           00353         call    DecTimer4
                      00354 ;
                      00355 ;-----------------------------------------------------------------
                      00356 ; blink LED
                      00357 ;
000C   0021           00358         BANKSEL TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
000D   160C           00359         BSF     LED1_Tris       ;Input=LED off
000E   0020           00360         MOVLB   0
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  8

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00361 ;
                      00362 ; Read SW1
000F   1032           00363         BCF     SW1_Flag
0010   1E0C           00364         BTFSS   SW1_In  ;Button pressed?
0011   1432           00365         BSF     SW1_Flag        ; Yes, it's active low
                      00366 ;
0012   080C           00367         MOVF    PORTA,W
0013   390F           00368         ANDLW   0x0F
0014   00BC           00369         MOVWF   GPIOBits
0015   1832           00370         BTFSC   SW1_Flag
0016   163C           00371         BSF     GPIOBits,4
                      00372 ;
0017   0BA1           00373         DECFSZ  LED_Count,F
0018   2???           00374         GOTO    TMR2_Done
0019   0820           00375         MOVF    LED_Time,W
001A   00A1           00376         MOVWF   LED_Count
001B   0021           00377         BANKSEL TRISA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
001C   120C           00378         BCF     LED1_Tris       ;Output=LED on
                      00379 ;
001D   0020           00380         MOVLB   0
001E   1091           00381 TMR2_Done       BCF     PIR1,TMR2IF
001F                  00382 TMR2_End:       
                      00383 ;
                      00384 ;=========================================================================================
                      00385 ; I2C Com
001F   0020           00386         MOVLB   0x00
0020   1991           00387         btfsc   PIR1,SSP1IF     ;Is this a SSP interrupt?
0021   2???           00388         call    I2C_ISR ; Yes
0022   0020           00389         movlb   0
                      00390 ;-----------------------------------------------------------------------------------------
                      00391 ; I2C Bus Collision
0023   0020           00392 IRQ_5   MOVLB   0x00
0024   1D92           00393         btfss   PIR2,BCL1IF
0025   2???           00394         goto    IRQ_5_End
                      00395 
0026   0024           00396         banksel SSP1BUF                                         
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0027   0811           00397         movf    SSP1BUF,w       ; clear the SSP buffer
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0028   1615           00398         bsf     SSP1CON1,CKP    ; release clock stretch
0029   0020           00399         movlb   0x00
002A   1192           00400         bcf     PIR2,BCL1IF     ; clear the SSP interrupt flag
002B                  00401 IRQ_5_End:
                      00402 ;
                      00403 ;--------------------------------------------------------------------
                      00404 ;===========================================
                      00405 ;
002B   0020           00406         MOVLB   0       ;bank 0
002C   1911           00407         BTFSC   PIR1,CCP1IF     ;CCP1 match?
002D   2???           00408         CALL    ISR_MotorMove
                      00409 ;
002E   0009           00410         retfie          ; return from interrupt
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE  9

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00411 ;
                      00412 ;
                      00413 ;==============================================================================================
                      00414 ;==============================================================================================
                      00415 ;
                      00416         include F1847_Common.inc
                      00001 ;=========================================================================================
                      00002 ; Commonly used routines PIC16F1847 version
                      00003 ;
                      00004 ;    Filename:      F1847 Common.inc
                      00005 ;    Date:          11/21/2015
                      00006 ;    File Version:  1.0.1
                      00007 ;
                      00008 ;    Author:        David M. Flynn
                      00009 ;    Company:       Oxford V.U.E., Inc.
                      00010 ;    E-Mail:        dflynn@oxfordvue.com
                      00011 ;    Web Site:      http://www.oxfordvue.com/
                      00012 ;
                      00013 ;=========================================================================================
                      00014 ;    History:
                      00015 ;
                      00016 ; 1.0.1 11/21/2015      Updates DecTimer.
                      00017 ; 1.0   11/16/2013      Updated from F648A Common.inc
                      00018 ;
                      00019 ;=========================================================================================
                      00020 ; Routines:
                      00021 ;
                      00022 ; ClearRam      (2+0) Clears all RAM, call once before initializing variables, FSR0
                      00023 ; CopyToRam     (1+0) copy param memory (EEPROM) to ram, call once, FSR0
                      00024 ; SaveParams    (1+0) copy ram to param memory (EEPROM), FSR0
                      00025 ;
                      00026 ;  Set FSR0H before calling these routines
                      00027 ; DecTimer4     (0+0) Decrement routine for 16 bit timers, FSR0
                      00028 ; DecTimer3
                      00029 ; DecTimer2
                      00030 ; DecTimer1
                      00031 ; DecTimer      (0+0) High byte of counter address in W
                      00032 ;
                      00033 ; TestT4_Zero   Test for 16 bit timers = zero
                      00034 ; TestT3_Zero   If Timer is zero return Z flag,1 else Z=0
                      00035 ; TestT2_Zero
                      00036 ; TestT1_Zero
                      00037 ;
                      00038 ; Delay10uS     (0+0)Delay uS    1 cycle = 1uS, 8Mhz clock version
                      00039 ; Delay100uS
                      00040 ; Delay40uS
                      00041 ; DelayWuS
                      00042 ;
                      00043 ; EEReadW       (0+0) Read EEPROM address in W
                      00044 ; EERead        (0+0) Read EEPROM address in EEAddrTemp
                      00045 ; EEWriteW      (0+0) Write EEPROM address in W, Data in EEDataTemp
                      00046 ; EEWrite       (0+0) Write EEPROM address in EEAdrTemp, Data in EEDataTemp, FSR0
                      00047 ;
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 10

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00048 ;=========================================================================================
                      00049         ifndef UseEEParams
                      00050         constant UseEEParams=0
                      00051         endif
                      00052 ;=========================================================================================
                      00053 ; Clears all RAM
                      00054 ; Entry: none
                      00055 ; Exit: none
                      00056 ; RAM used: All
                      00057 ; Calls:(2+0) ClearRam_L2
                      00058 ;
002F   0020           00059 ClearRam        MOVLB   0x00
0030   305F           00060         MOVLW   0x5F    ;Clear 20h-7Eh, 95 bytes
0031   00FF           00061         MOVWF   Param7F
0032   3020           00062         MOVLW   0x20
0033   0084           00063         MOVWF   FSR0
0034   0185           00064         CLRF    FSR0H
0035   2???           00065         CALL    ClearRam_L2
                      00066 ;
0036   3050           00067         MOVLW   0x50    ;Clear A0h-EFh, 80 bytes
0037   00FF           00068         MOVWF   Param7F
0038   30A0           00069         MOVLW   0xA0
0039   0084           00070         MOVWF   FSR0
003A   2???           00071         CALL    ClearRam_L2
                      00072 ;
003B   0A85           00073         INCF    FSR0H,F 
003C   2???           00074         CALL    ClearRam_2      ;Banks 2,3
003D   0A85           00075         INCF    FSR0H,F 
003E   2???           00076         CALL    ClearRam_2      ;Banks 4,5
003F   0A85           00077         INCF    FSR0H,F ;Banks 6,7
                      00078 ;       
0040   3050           00079 ClearRam_2      MOVLW   0x50    ;Clear 120h-16Fh, 80 bytes
0041   00FF           00080         MOVWF   Param7F
0042   3020           00081         MOVLW   0x20
0043   0084           00082         MOVWF   FSR0
0044   2???           00083         CALL    ClearRam_L2
                      00084 ;
0045   3050           00085         MOVLW   0x50    ;Clear A0h-EFh, 80 bytes
0046   00FF           00086         MOVWF   Param7F
0047   30A0           00087         MOVLW   0xA0
0048   0084           00088         MOVWF   FSR0
                      00089 ;
0049   0180           00090 ClearRam_L2     CLRF    INDF0
004A   0A84           00091         INCF    FSR0,F
004B   0BFF           00092         DECFSZ  Param7F,F
004C   2???           00093         GOTO    ClearRam_L2
004D   0008           00094         RETURN
                      00095 ;
                      00096         if UseEEParams
                      00097 ;==========================================================================
                      00098 ; copy param memory to ram
                      00099 ;
004E   3000           00100 CopyToRam       MOVLW   nvFirstParamByte
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 11

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

004F   00A3           00101         MOVWF   EEAddrTemp
0050   302F           00102         MOVLW   FirstRAMParam
0051   0084           00103         MOVWF   FSR0
0052   0185           00104         CLRF    FSR0H
0053   2???           00105 CopyToRam_L1    CALL    EERead
0054   0080           00106         MOVWF   INDF0
0055   3031           00107         MOVLW   LastRAMParam
0056   0204           00108         SUBWF   FSR0,W
0057   1903           00109         SKPNZ
0058   0008           00110         RETURN
0059   0A84           00111         INCF    FSR0,F
005A   0AA3           00112         INCF    EEAddrTemp,F
005B   3???           00113         BRA     CopyToRam_L1
                      00114 ;
                      00115 ;===========================================================================
                      00116 ; copy ram to param memory
                      00117 ;
005C   3000           00118 SaveParams      MOVLW   nvFirstParamByte
005D   00A3           00119         MOVWF   EEAddrTemp
005E   302F           00120         MOVLW   FirstRAMParam
005F   0084           00121         MOVWF   FSR0
0060   0185           00122         CLRF    FSR0H
0061   0800           00123 SaveParams_L1   MOVF    INDF0,W
0062   00A4           00124         MOVWF   EEDataTemp
0063   2???           00125         CALL    EEWrite
0064   3031           00126         MOVLW   LastRAMParam    ;last byte
0065   0204           00127         SUBWF   FSR0,W
0066   1903           00128         SKPNZ
0067   0008           00129         RETURN
0068   0A84           00130         INCF    FSR0,F
0069   0AA3           00131         INCF    EEAddrTemp,F
006A   3???           00132         BRA     SaveParams_L1
                      00133 ;
                      00134         endif
                      00135 ;=====================================================================================================
                      00136 ;=======================================================================================================
                            ==
                      00137 ; Decrement routine for 16 bit timers
                      00138 ; Set FSR0H before calling these routines.
                      00139 ;
006B   302C           00140 DecTimer4       movlw   Timer4Hi
006C   3???           00141         bra     DecTimer
006D   302A           00142 DecTimer3       movlw   Timer3Hi
006E   3???           00143         bra     DecTimer
006F   3028           00144 DecTimer2       movlw   Timer2Hi
0070   3???           00145         bra     DecTimer
0071   3026           00146 DecTimer1       movlw   Timer1Hi
                      00147 ;DecTimer
                      00148 ; entry: FSR=Timer(n)Hi
0072   0084           00149 DecTimer        MOVWF   FSR0L
0073   0013           00150         MOVIW   FSR0--  ;TimerNHi
0074   0400           00151         IORWF   INDF0,W ;TimerNLo
0075   1903           00152         SKPNZ
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 12

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0076   0008           00153         RETURN
0077   3001           00154         MOVLW   0x01
0078   0280           00155         SUBWF   INDF0,F ;TimerNLo
0079   0A84           00156         INCF    FSR0L,F
007A   0103           00157         CLRW
007B   3B80           00158         SUBWFB  INDF0,F ;TimerNHi
007C   0008           00159         RETURN
                      00160 ;
                      00161 ;==============================================================================================
                      00162 ; Test for 16 bit timers = zero
                      00163 ;If Timer is zero return Z flag,1 else Z=0
                      00164 ;
007D   082B           00165 TestT4_Zero     movf    Timer4Lo,W
007E   042C           00166         iorwf   Timer4Hi,W
007F   0008           00167         return
                      00168 ;
0080   0829           00169 TestT3_Zero     movf    Timer3Lo,W
0081   042A           00170         iorwf   Timer3Hi,W
0082   0008           00171         return
                      00172 ;
0083   0827           00173 TestT2_Zero     movf    Timer2Lo,W
0084   0428           00174         iorwf   Timer2Hi,W
0085   0008           00175         return
                      00176 ;
0086   0825           00177 TestT1_Zero     movf    Timer1Lo,W
0087   0426           00178         iorwf   Timer1Hi,W
0088   0008           00179         return  
                      00180 ;
                      00181 ;======================================================================================
                      00182 ;Delay uS    1 cycle = 1uS, 8Mhz clock version
                      00183 ; RAM used: Param77
                      00184 ; Calls:(0) none
                      00185 ;
0089   3005           00186 Delay10uS       MOVLW   0x05    ;(2*3+5)/2=10
008A   3???           00187         bra     DelayWuS
008B   3041           00188 Delay100uS      MOVLW   d'65'   ;(28*3+5)/2=100
008C   3???           00189         bra     DelayWuS
008D   3019           00190 Delay40uS       MOVLW   d'25'   ;(11*3+5)=40
008E   00F7           00191 DelayWuS        MOVWF   Param77
008F   0BF7           00192 DelayWuS_Loop   DECFSZ  Param77,F
0090   3???           00193         bra     DelayWuS_Loop
0091   0008           00194         RETURN
                      00195 ;
                      00196 ;==============================================================================================
                      00197 ; Read EEPROM
                      00198 ; entry: EEPROM address to read in W
                      00199 ;        Bank 0 selected
                      00200 ; exit: W=EEDATA, Bank 0 selected
                      00201 ;
0092   00A3           00202 EEReadW movwf   EEAddrTemp
                      00203 ;
                      00204 ;==============================================================================================
                      00205 ; Read EEPROM
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 13

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00206 ; entry: EEPROM address to read in EEAddrTemp
                      00207 ;        Bank 0 selected
                      00208 ; exit: W=EEDATA, Bank 0 selected
                      00209 ;
0093   0823           00210 EERead  movf    EEAddrTemp,W
0094   0023           00211         MOVLB   0x03    ;Bank 3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0095   0091           00212         movwf   EEADR   ;Address to read
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0096   1415           00213         bsf     EECON1,RD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0097   0813           00214         movf    EEDAT,W ;W=EEDAT
0098   0020           00215         MOVLB   0x00    ;Bank 0
0099   0008           00216         return
                      00217 ;
                      00218 ;==============================================================================================
                      00219 ; Write EEPROM
                      00220 ; entry: EEPROM address to write in W
                      00221 ;        EEPROM data to write in EEDataTemp
                      00222 ;        Bank 0 selected
                      00223 ; exit: Bank 0 selected
                      00224 ;
009A   00A3           00225 EEWriteW        movwf   EEAddrTemp
                      00226 ;
                      00227 ;==============================================================================================
                      00228 ; Write EEPROM
                      00229 ; entry: EEPROM address to write in EEAdrTemp
                      00230 ;        EEPROM data to write in EEDataTemp
                      00231 ;        Bank 0 selected
                      00232 ; exit: Bank 0 selected
                      00233 ;
009B                  00234 EEWrite 
009B   3023           00235         MOVLW   EEAddrTemp
009C   0084           00236         MOVWF   FSR0
009D   0185           00237         CLRF    FSR0H
009E   0023           00238         MOVLB   0x03    ;Bank 3
009F   0800           00239         MOVF    INDF0,W ;EEAddrTemp
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A0   0091           00240         movwf   EEADR   ;Address to write
00A1   0A84           00241         INCF    FSR0,F
00A2   0800           00242         movf    INDF0,W ;EEDataTemp
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A3   0093           00243         movwf   EEDAT
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A4   1515           00244         bsf     EECON1,WREN
00A5   138B           00245         bcf     INTCON,GIE      ;Disale Ints
00A6   1B8B           00246         btfsc   INTCON,GIE
00A7   3???           00247         bra     $-2
00A8   3055           00248         movlw   0x55
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00A9   0096           00249         movwf   EECON2  ;write 55
00AA   30AA           00250         movlw   0xAA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 14

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00AB   0096           00251         movwf   EECON2  ;write AA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AC   1495           00252         bsf     EECON1,WR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AD   1895           00253 EEWriteLoop     btfsc   EECON1,WR       
00AE   3???           00254         bra     EEWriteLoop
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00AF   1115           00255         bcf     EECON1,WREN
00B0   178B           00256         bsf     INTCON,GIE
00B1   0020           00257         MOVLB   0x00    ;Bank 0
00B2   0008           00258         return
                      00259 ;
                      00260 ;       
                      00261 ;=========================================================================================
                      00262 ;=========================================================================================
                      00263 ;
                      00264 ;
                      00265 ;
                      00417         include I2C_SLAVE.inc
                      00001 ;=========================================================================================
                      00002 ; PIC12F1822
                      00003 ; I2C SLAVE DRIVER CODE
                      00004 ;
                      00005 ;    Filename:      I2C SLAVE.inc
                      00006 ;    Date:          12/7/2015
                      00007 ;    File Version:  1.0.7
                      00008 ;
                      00009 ;    Author:        David M. Flynn
                      00010 ;    Company:       Oxford V.U.E., Inc.
                      00011 ;    E-Mail:        dflynn@oxfordvue.com
                      00012 ;    Web Site:      http://www.oxfordvue.com/
                      00013 ;
                      00014 ;=========================================================================================
                      00015 ;   I2C Slave Driver Code for PIC16F1822
                      00016 ;
                      00017 ;    History:
                      00018 ;
                      00019 ; 1.0.7  12/7/2015      Changed slave address to ram based I2CAddr.
                      00020 ; 1.0.6  12/5/2015      Fixed some comments.
                      00021 ; 1.0.5  11/9/2015      Added watchdog to recover from wiring glitch.
                      00022 ; 1.0.4  11/5/2015      Optimized some code. Added AHEN=DHEN=1 clock stretching.
                      00023 ; 1.0.3  11/4/2015      Added ACK to R_Data for partial buffer read support.
                      00024 ;       Added PCIE (Stop causes interrupt) to end write 
                      00025 ;        before all RX_ELEMENTS received.
                      00026 ; 1.0.2  4/25/2015      First woring version
                      00027 ; 1.0.1  9/4/2014       Modified for 12F1822
                      00028 ; 1.0    11/23/2013     Adapted from AN734C
                      00029 ;
                      00030 ; *** Adapted from AN734C ****
                      00031 ; PIC16F1937 
                      00032 ;I2C SLAVE DRIVER CODE 
                      00033 ;Author: Chris Best 
                      00034 ;Microchip Technologies
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 15

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00035 ;DATE: 07/03/2013
                      00036 ;
                      00037 ;=========================================================================================
                      00038 ; Options
                      00039 ;
                      00040 ;   I2C_ADDRESS, TX_ELEMENTS and RX_ELEMENTS must be set and be the same in the master driver.
                      00041 ;
                      00042         ifndef useI2CISR
                      00043         constant        useI2CISR=1
                      00044         endif
                      00045 ;=========================================================================================
                      00046 ;=========================================================================================
                      00047 ; What happens next:
                      00048 ;  Sends or receives TX_ELEMENTS/RX_ELEMENTS bytes of data to/from the master
                      00049 ;
                      00050 ;=========================================================================================
                      00051 ; Routines:
                      00052 ;
                      00053 ; Init_I2C      initial setup, call once before starting main event loop
                      00054 ; I2C_READ
                      00055 ; I2C_WRITE
                      00056 ;
                      00057 ;=========================================================================================
                      00058 ;
                      00059 ;
                      00060 ;Note: only upper 7 bits of address are used
                      00061 ;I2C_ADDRESS    EQU     0x30    ; Slave default address
                      00062 ;TX_ELEMENTS    EQU     .8      ; number of allowable array elements
                      00063 ;RX_ELEMENTS    EQU     .8      ; number of allowable array elements
                      00064 ;I2C_TX_Init_Val        EQU     0xAA    ; value to load into transmit array to send to master
                      00065 ;I2C_RX_Init_Val        EQU     0xAA    ; value to load into received data array
                      00066 ;
                      00067 ;------------------------------------ variables-------------------------------------------
                      00068 ;       I2CAddr         ;Bank 0 Ram
                      00069 ;
                      00070 ;       cblock  0x70                                                                    ; set up in shar
                            ed memory for easy access
                      00071 ;       INDEX_I2C               ; index used to point to array location
                      00072 ;       TX_DataSize             ; # of bytes to TX, 1..TX_ELEMENTS      
                      00073 ;       GFlags
                      00074 ;       endc
                      00075 ;
                      00076 ;#Define        I2C_TXLocked    GFlags,0        ; Set/cleared by ISR, data is being sent
                      00077 ;#Define        I2C_RXLocked    GFlags,1        ; Set/cleared by ISR, data is being received
                      00078 ;#Define        I2C_NewRXData   GFlags,2        ; Set by ISR, The new data is here!
                      00079 ;
                      00080 ;I2C_Buffers    udata   0xA0
                      00081 ;I2C_ARRAY_TX   RES     TX_ELEMENTS     ; array to transmit to master
                      00082 ;I2C_ARRAY_RX   RES     RX_ELEMENTS     ; array to receive from master
                      00083 ;       
                      00084 ;       if useI2CWDT
                      00085 ;TimerI2C       EQU     Timer1Lo
                      00086 ;       endif
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 16

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00087 ;
                      00088 ;=========================================================================================
                      00089 ;----------------------------------- interrupt service routines --------------------------
                      00090 ;
                      00091 ;-----------------------------------------------------------------------------------------
                      00092 ; I2C Com
                      00093 ;       MOVLB   0x00
                      00094 ;       btfsc   PIR1,SSP1IF     ; Is this a SSP interrupt?
                      00095 ;       call    I2C_ISR
                      00096 ;       movlb   0
                      00097 ;
                      00098 ;-----------------------------------------------------------------------------------------
                      00099 ; I2C Bus Collision
                      00100 ;IRQ_5  MOVLB   0x00
                      00101 ;       btfss   PIR2,BCL1IF
                      00102 ;       goto    IRQ_5_End
                      00103 ;
                      00104 ;       banksel SSP1BUF                                         
                      00105 ;       movf    SSP1BUF,w       ; clear the SSP buffer
                      00106 ;       bsf     SSP1CON1,CKP    ; release clock stretch
                      00107 ;       movlb   0x00
                      00108 ;       bcf     PIR2,BCL1IF     ; clear the SSP interrupt flag  
                      00109 ;
                      00110 ;IRQ_5_End:
                      00111 ;
                      00112 ;=========================================================================================
                      00113 ;
                      00114 ;LOADFSR1       macro   ADDRESS,INDEX   ; ADDRESS = I2C_ARRAY, INDEX = INDEX_I2C                        
                      00115 ;       movlw   low ADDRESS     ; load address                                          
                      00116 ;       addwf   INDEX,W ; add the index value to determine location in array
                      00117 ;       movwf   FSR1L   ; load FSR1L with pointer info
                      00118 ;       clrf    FSR1H
                      00119 ;       movlw   high ADDRESS
                      00120 ;       addwfc  FSR1H,F
                      00121 ;       endm            
                      00122 ;
                      00123 ;=========================================================================================
                      00124 ;       Main
                      00125 ;-----------------------------------------------------------------------------------------
                      00126 ;
                      00127 ;       call    Init_I2C        ; set up uC
                      00128 ;
                      00129 ;=========================================================================================
                      00130 ;=========================================================================================
                      00131 ; I2C Idle routine, only needed if useI2CWDT is used
                      00132 ;=========================================================================================
                      00133 ; Call from main loop
                      00134 ;
00B3   0020           00135 I2C_Idle        movlb   0
00B4   08A5           00136         movf    TimerI2C,F
00B5   1D03           00137         SKPZ
00B6   0008           00138         return
                      00139 ;
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 17

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00140 ; fall thru to Init_I2C
                      00141 ;
                      00142 ;-----------------------------------------------------------------------------------------
                      00143 ;       Initialize: Sets up register values 
                      00144 ;-----------------------------------------------------------------------------------------
                      00145 ; fill the RX and TX arrays with I2C_TX_Init_Val, I2C_RX_Init_Val
                      00146 ;
00B7                  00147 Init_I2C:
                      00148 ; for J=0 to TX_ELEMENTS-1
                      00149 ;  I2C_ARRAY_TX(J)=I2C_TX_Init_Val
00B7   3020           00150         movlw   low I2C_ARRAY_TX
00B8   0086           00151         movwf   FSR1L
00B9   3001           00152         movlw   high I2C_ARRAY_TX
00BA   0087           00153         movwf   FSR1H
00BB   300A           00154         movlw   TX_ELEMENTS
00BC   00F0           00155         movwf   INDEX_I2C
00BD   00F1           00156         movwf   TX_DataSize
00BE   30AA           00157         movlw   I2C_TX_Init_Val
00BF   001E           00158 Init_I2C_L1     movwi   FSR1++
00C0   0BF0           00159         decfsz  INDEX_I2C,F
00C1   2???           00160         goto    Init_I2C_L1
                      00161 ;
00C2   302A           00162         movlw   low I2C_ARRAY_RX
00C3   0086           00163         movwf   FSR1L
00C4   3001           00164         movlw   high I2C_ARRAY_RX
00C5   0087           00165         movwf   FSR1H
00C6   3008           00166         movlw   RX_ELEMENTS
00C7   00F0           00167         movwf   INDEX_I2C
00C8   30AB           00168         movlw   I2C_RX_Init_Val
00C9   001E           00169 Init_I2C_L2     movwi   FSR1++
00CA   0BF0           00170         decfsz  INDEX_I2C,F
00CB   2???           00171         goto    Init_I2C_L2
                      00172 ;
                      00173 ;I2C set up
00CC   01F0           00174         clrf    INDEX_I2C       ; index used to point to array location
00CD   01F2           00175         clrf    GFlags
                      00176 ;
00CE   0024           00177         banksel SSP1STAT
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00CF   1794           00178         bsf     SSP1STAT,SMP    ; Slew rate control disabled for standard speed mode
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D0   0195           00179         clrf    SSP1CON1        ;Reset SSP
00D1   3036           00180         movlw   b'00110110'     ; Enable serial port, I2C slave mode, 7-bit address
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D2   0095           00181         movwf   SSP1CON1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D3   1416           00182         bsf     SSP1CON2,SEN    ; enable clock stretching
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D4   1617           00183         bsf     SSP1CON3,BOEN   ; SSPBUF is updated and NACK is generated       
                      00184                         ; for a received address/data byte, 
                      00185                         ; ignoring the state of SSPOV bit only if BF bit = 0.
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D5   1597           00186         bsf     SSP1CON3,SDAHT  ; Minimum of 300 ns hold time
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 18

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D6   1717           00187         bsf     SSP1CON3,PCIE   ; Stop causes interupt
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D7   1497           00188         bsf     SSP1CON3,AHEN   ; Enable address holding, CKP must be set after each byte
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00D8   1417           00189         bsf     SSP1CON3,DHEN   ; Enable data holding
00D9   0020           00190         movlb   0
00DA   082F           00191         movf    I2CAddr,W       ; load the slave address
00DB   0024           00192         BANKSEL SSP1ADD
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DC   0092           00193         movwf   SSP1ADD
                      00194 ;
                      00195         if useI2CISR
00DD   0021           00196         movlb   0x01
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DE   1592           00197         bsf     PIE2,BCL1IE     ; enable SSP interrupts
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00DF   1591           00198         bsf     PIE1,SSP1IE     ; enable SSP interrupts
                      00199         endif
00E0   0020           00200         movlb   0x00
00E1   1191           00201         bcf     PIR1,SSP1IF     ; clear the SSP interrupt flag  
00E2   1192           00202         bcf     PIR2,BCL1IF     ; clear the SSP interrupt flag
00E3   0008           00203         return
                      00204 ;
                      00205 ;=========================================================================================              
                                            
                      00206 ; Interrupt Service Routines (ISR)
                      00207 ;=========================================================================================
                      00208 ;
00E4                  00209 I2C_ISR:
                      00210         if useI2CWDT
00E4   17A5           00211         BSF     TimerI2C,7      ;Kick the dog
                      00212         endif
                      00213 ;
00E5   1191           00214         bcf     PIR1,SSP1IF     ; clear the SSP interrupt flag
00E6   0024           00215         banksel SSP1STAT                                                
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E7   1D14           00216         btfss   SSP1STAT,R_NOT_W        ; is it a master read:
00E8   2???           00217         goto    I2C_WRITE
                      00218 ; I2C_READ
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00E9   1A94           00219         btfsc   SSP1STAT,D_NOT_A        ; was last byte an address or data?
00EA   2???           00220         goto    R_DATA  ; if set, it was data
                      00221 ;       
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EB   1296           00222 R_ADDRESS       bcf     SSP1CON2,ACKDT
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EC   1F97           00223         btfss   SSP1CON3,ACKTIM
00ED   2???           00224         goto    R_Add_ACK
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EE   0811           00225         movf    SSP1BUF,W       ; dummy read to clear BF bit
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00EF   1615           00226         bsf     SSP1CON1,CKP    ; release clock stretch
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 19

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00F0   0008           00227         return  
                      00228 ;
00F1   01F0           00229 R_Add_ACK       clrf    INDEX_I2C       ; clear index pointer
                      00230         LOADFSR1        I2C_ARRAY_TX,INDEX_I2C
00F2   3020               M         movlw   low I2C_ARRAY_TX ; load address                                          
00F3   0770               M         addwf   Param70,W ; add the index value to determine location in array
00F4   0086               M         movwf   FSR1L   ; load FSR1L with pointer info
00F5   0187               M         clrf    FSR1H
00F6   3001               M         movlw   high I2C_ARRAY_TX
00F7   3D87               M         addwfc  FSR1H,F
00F8   0801           00231         movf    INDF1,W ; move value into W to load to SSP buffer
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00F9   0091           00232         movwf   SSP1BUF ; load SSP buffer
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00FA   1615           00233         bsf     SSP1CON1,CKP
                      00234 ;
00FB   0AF0           00235         incf    INDEX_I2C,F     ; increment INDEX_I2C 'pointer'
00FC   1472           00236         bsf     I2C_TXLocked    ; lock data
00FD   0008           00237         return
                      00238 ;
                      00239 ;----------------
                      00240 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
00FE   1B16           00241 R_DATA  btfsc   SSP1CON2,ACKSTAT        ; ACK* = Master wants another byte
00FF   2???           00242         goto    R_Data_NACK     ;  don't send another
                      00243 ;
0100   0871           00244         movf    TX_DataSize,W   ; load array elements to TX
0101   0270           00245         subwf   INDEX_I2C,W     ; if Z = 1, subtract index from number of elements
0102   0103           00246         CLRW            ;default to sending 0, filler byte
0103   1803           00247         btfsc   _C      ; did a carry occur after subtraction?
0104   2???           00248         goto    R_PastEnd       ; if so, Master is trying to read to many bytes
                      00249         LOADFSR1        I2C_ARRAY_TX,INDEX_I2C
0105   3020               M         movlw   low I2C_ARRAY_TX ; load address                                          
0106   0770               M         addwf   Param70,W ; add the index value to determine location in array
0107   0086               M         movwf   FSR1L   ; load FSR1L with pointer info
0108   0187               M         clrf    FSR1H
0109   3001               M         movlw   high I2C_ARRAY_TX
010A   3D87               M         addwfc  FSR1H,F
010B   0AF0           00250         incf    INDEX_I2C,F     ; increment INDEX_I2C 'pointer'
010C   0801           00251         movf    INDF1,W ; move value into W to load to SSP buffer
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
010D   0091           00252 R_PastEnd       movwf   SSP1BUF ; load SSP buffer
                      00253 ;
010E   0871           00254         movf    TX_DataSize,W
010F   0270           00255         subwf   INDEX_I2C,W
0110   1903           00256         btfsc   _Z
0111   1072           00257         BCF     I2C_TXLocked
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0112   1615           00258         bsf     SSP1CON1,CKP
0113   0008           00259         return
                      00260 ;
0114   1072           00261 R_Data_NACK     BCF     I2C_TXLocked    ;unlock data
0115   0008           00262         Return 
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 20

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00263 ;
                      00264 ;-----------------------------------------------------------------------------------------
                      00265 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0116   1A94           00266 I2C_WRITE       btfsc   SSP1STAT,D_NOT_A        ; was last byte an address or data?
0117   2???           00267         goto    W_DATA  ; if set, it was data
                      00268 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0118   1296           00269 W_ADDRESS       bcf     SSP1CON2,ACKDT  ;We will ACK*
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0119   0811           00270         movf    SSP1BUF,W       ; dummy read to clear the BF bit
011A   01F0           00271         clrf    INDEX_I2C       ; clear index pointer
011B   14F2           00272         BSF     I2C_RXLocked    ; lock data
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
011C   1615           00273 W_ACK   bsf     SSP1CON1,CKP    ; release clock stretch
011D   0008           00274         return
                      00275 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
011E   1A14           00276 W_DATA  btfsc   SSP1STAT,P      ;Stop bit?
011F   2???           00277         goto    W_Data_Stop     ;  Yes
                      00278 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0120   1F97           00279         btfss   SSP1CON3,ACKTIM ;Data arrived?
0121   2???           00280         goto    W_ACK   ; no, just an outgoing ACK*     
                      00281 ;       
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0122   1C14           00282         btfss   SSP1STAT,BF     ;Buffer full?
0123   0008           00283         return          ; no
                      00284 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0124   1615           00285         bsf     SSP1CON1,CKP    ; release clock stretch
0125   3008           00286         movlw   RX_ELEMENTS     ; load array elements value
0126   0270           00287         subwf   INDEX_I2C,W     ; if Z = 1, subtract index from number of elements
0127   1803           00288         btfsc   _C      ; did a carry occur after subtraction?
0128   2???           00289         goto    NO_MEM_OVERWRITE        ; if so, Master is trying to write to many bytes
                      00290 ;
                      00291         LOADFSR1        I2C_ARRAY_RX,INDEX_I2C
0129   302A               M         movlw   low I2C_ARRAY_RX ; load address                                          
012A   0770               M         addwf   Param70,W ; add the index value to determine location in array
012B   0086               M         movwf   FSR1L   ; load FSR1L with pointer info
012C   0187               M         clrf    FSR1H
012D   3001               M         movlw   high I2C_ARRAY_RX
012E   3D87               M         addwfc  FSR1H,F
012F   0AF0           00292         incf    INDEX_I2C,F     ; increment INDEX_I2C 'pointer'
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0130   0811           00293         movf    SSP1BUF,W       ; move the contents of the buffer into W
0131   0081           00294         movwf   INDF1   ; load INDF1 with data to write
0132   1572           00295         BSF     I2C_NewRXData   ;new data is available
                      00296 ;
0133   3008           00297         movlw   RX_ELEMENTS
0134   0270           00298         subwf   INDEX_I2C,W
0135   1D03           00299         SKPZ            ;Last byte?
0136   0008           00300         return          ; no
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 21

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0137   1696           00301         bsf     SSP1CON2,ACKDT  ;Yes, We will not ACK*
                      00302 ;       
0138   10F2           00303 W_Data_Stop     BCF     I2C_RXLocked    ;unlock data
0139   0008           00304         return  
                      00305 ;
                      00306 ;-----------------------------------------------------------------------------------------
                      00307 ;
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
013A   0811           00308 NO_MEM_OVERWRITE        movf    SSP1BUF,W       ; clear buffer so no overwrite occurs
013B   0008           00309         return
                      00310 ;
                      00311 ;-----------------------------------------------------------------------------------------
                      00312 ;
                      00313 ;
                      00314 ;       
                      00315                 
                      00316                 
                      00317                 
                      00318                 
                      00319                 
                      00320                 
                      00321                 
                      00322                 
                      00323                 
                      00324                 
                      00325                 
                      00326                 
                      00327                 
                      00328                                                                                         ; END OF PROGRAM
                      00418 ;
                      00419 ;==============================================================================================
                      00420 ;
013C   0021           00421 start   MOVLB   0x01    ; select bank 1
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
013D   1795           00422         bsf     OPTION_REG,NOT_WPUEN    ; disable pullups on port B
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
013E   1295           00423         bcf     OPTION_REG,TMR0CS       ; TMR0 clock Fosc/4
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
013F   1195           00424         bcf     OPTION_REG,PSA  ; prescaler assigned to TMR0
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0140   1415           00425         bsf     OPTION_REG,PS0  ;111 8mhz/4/256=7812.5hz=128uS/Ct=0.032768S/ISR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0141   1495           00426         bsf     OPTION_REG,PS1  ;101 8mhz/4/64=31250hz=32uS/Ct=0.008192S/ISR
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0142   1515           00427         bsf     OPTION_REG,PS2
                      00428 ;
0143   0021           00429         MOVLB   0x01    ; bank 1
0144   30F0           00430         MOVLW   OSCCON_Value
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0145   0099           00431         MOVWF   OSCCON
0146   3017           00432         movlw   b'00010111'     ; WDT prescaler 1:65536 period is 2 sec (RESET value)
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 22

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0147   0097           00433         movwf   WDTCON  
                      00434 ;       
0148   0023           00435         MOVLB   0x03    ; bank 3
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0149   018C           00436         CLRF    ANSELA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
014A   018D           00437         CLRF    ANSELB  ;Digital I/O
                      00438 ;
                      00439 ; setup timer 1 for 0.5uS/count
                      00440 ;
014B   0020           00441         BANKSEL T1CON   ; bank 0
014C   3021           00442         MOVLW   T1CON_Val
014D   0098           00443         MOVWF   T1CON
014E   1399           00444         bcf     T1GCON,TMR1GE   ;always count
                      00445 ;
014F   0020           00446         BANKSEL T2CON   ;Setup T2 for 100/s
0150   304F           00447         MOVLW   T2CON_Value
0151   009C           00448         MOVWF   T2CON
0152   0020           00449         BANKSEL PR2
0153   307D           00450         MOVLW   PR2_Value
0154   009B           00451         MOVWF   PR2
                      00452 ;
0155   0020           00453         MOVLB   0x00    ;Bank 0
                      00454 ; setup data ports
0156   3004           00455         movlw   PortBValue
0157   008D           00456         movwf   PORTB   ;init port B
0158   30C0           00457         movlw   PortAValue
0159   008C           00458         movwf   PORTA
015A   0021           00459         MOVLB   0x01    ; bank 1
015B   303F           00460         movlw   PortADDRBits
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
015C   008C           00461         movwf   TRISA
015D   30D2           00462         movlw   PortBDDRBits    ;setup for programer
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
015E   008D           00463         movwf   TRISB
                      00464 ;
                      00465 ;
                      00466 ; clear memory to zero
015F   2???           00467         CALL    ClearRam
                      00468 ;-----------------------
                      00469 ; Setup CCP1
0160   0025           00470         BANKSEL CCP1CON
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0161   0193           00471         CLRF    CCP1CON ;reset CCP1
0162   300A           00472         MOVLW   CCP1CON_Run
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0163   0093           00473         MOVWF   CCP1CON
                      00474 ;       
0164   0021           00475         BANKSEL PIE1    ;Enable Interupts
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0165   1491           00476         BSF     PIE1,TMR2IE
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0166   1511           00477         bsf     PIE1,CCP1IE
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 23

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00478 ;
0167   0020           00479         MOVLB   0x00
0168   3064           00480         MOVLW   LEDTIME
0169   00A0           00481         MOVWF   LED_Time
                      00482 ;
016A   0064           00483         CLRWDT
016B   2???           00484         call    CopyToRam
                      00485 ; init motor variables
016C   01B4           00486         CLRF    MotorFlagsX
016D   14B4           00487         BSF     MotorFlagsX,InPosition  ;Don't move
                      00488 ;
016E   01B7           00489         CLRF    CurSpeedX
016F   01B8           00490         CLRF    StepsToGoXLo
0170   01B9           00491         CLRF    StepsToGoXHi
                      00492 ; test for a bad I2C address
0171   082F           00493         movf    I2CAddr,W
0172   1809           00494         btfsc   WREG,0  ;LSb most be clr
0173   3030           00495         MOVLW   I2C_ADDRESS
0174   0889           00496         movf    WREG,F
0175   1903           00497         SKPNZ
0176   3030           00498         MOVLW   I2C_ADDRESS
0177   00AF           00499         movwf   I2CAddr
                      00500 ;
0178   0831           00501         MOVF    MaxSpd,W
0179   00B6           00502         MOVWF   MaxSpeedX
017A   0830           00503         movf    MinSpd,W
017B   00B5           00504         movwf   MinSpeedX
                      00505 ;
017C   0064           00506         CLRWDT
017D   2???           00507         call    Init_I2C        ;setup I2C
                      00508 ;
017E   170B           00509         bsf     INTCON,PEIE     ; enable periferal interupts
017F   178B           00510         bsf     INTCON,GIE      ; enable interupts
                      00511 ;
                      00512 ;-----------------------------------------
                      00513 ; Init RAM
                      00514 ;
                      00515 ; init flags (boolean variables) to false
0180   01AD           00516         CLRF    Flags
                      00517 ;
                      00518         if runTestAtStartup
                      00519 ; wait 5 seconds before doing anything
                      00520         BANKSEL Timer4Hi
                      00521         MOVLW   Low .500
                      00522         MOVWF   Timer4Lo
                      00523         MOVLW   High .500
                      00524         MOVWF   Timer4Hi
                      00525         BSF     RunMotorTest
                      00526         endif
                      00527 ;
                      00528 ;=========================================================================================
                      00529 ;=========================================================================================
                      00530 ;  Main Loop
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 24

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00531 ;
                      00532 ;=========================================================================================
0181   0064           00533 MainLoop        CLRWDT
                      00534 ;
0182   2???           00535         CALL    I2C_Idle
0183   2???           00536         CALL    I2C_DataInturp
                      00537 ;
0184   2???           00538         CALL    I2C_DataSender
                      00539 ;
                      00540 ;
0185   0020           00541         movlb   0
                      00542         if useMotorTest
                      00543         BTFSC   RunMotorTest
                      00544         call    MotorTest
                      00545         endif
                      00546 ;
                      00547 ;Move test
0186   0020           00548         movlb   0
0187   1C32           00549         btfss   SW1_Flag
0188   2???           00550         goto    MoveTest_End
0189   1CB4           00551         btfss   MotorFlagsX,InPosition
018A   2???           00552         goto    MoveTest_End
                      00553         
018B   3020           00554         movlw   low .800
018C   00B8           00555         movwf   StepsToGoXLo
018D   3003           00556         movlw   high .800
018E   00B9           00557         movwf   StepsToGoXHi
018F   10B4           00558         BCF     MotorFlagsX,InPosition  ;move it
0190                  00559 MoveTest_End:
                      00560         
0190   2???           00561         goto    MainLoop
                      00562 ;
                      00563 ;
                      00564 ;=========================================================================================
                      00565 ;=========================================================================================
                      00566 ; Parse the incoming data and put it where it belongs
                      00567 ; Cmd Byte plus up to 3 data bytes
  00000042            00568 Cmd_BeginMove   EQU     'B'     ;InPosition
  00000044            00569 Cmd_Dir EQU     'D'     ;RevDirection=Data:7
  00000048            00570 Cmd_Home        EQU     'H'     ;CurrentPositionX=0
  0000004D            00571 Cmd_MaxSpd      EQU     'M'     ;MaxSpeedX
  0000004E            00572 Cmd_MinSpd      EQU     'N'     ;MinSpeedX
  00000050            00573 Cmd_PosAbs      EQU     'P'     ;DestinationX
  00000052            00574 Cmd_MoveRel     EQU     'R'     ;StepsToGoXLo,StepsToGoXHo
  0000004F            00575 Cmd_GPIO_DDR    EQU     'O'     ;TRISA:0..3
  00000051            00576 Cmd_GPIO_Dat    EQU     'Q'     ;LATA:0..3
  0000007A            00577 Cmd_SetI2CAddr  EQU     'z'     ;Set I2C Address
                      00578 ;
                      00579 ;
                      00580 ;
0191   18F2           00581 I2C_DataInturp  BTFSC   I2C_RXLocked    ;Data is locked?
0192   0008           00582         RETURN          ; Yes
0193   1D72           00583         BTFSS   I2C_NewRXData   ;Data is new?
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 25

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0194   0008           00584         RETURN          ; No
0195   1172           00585         BCF     I2C_NewRXData
                      00586 ;
0196   302A           00587         movlw   low I2C_ARRAY_RX
0197   0084           00588         movwf   FSR0L
0198   3001           00589         movlw   high I2C_ARRAY_RX
0199   0085           00590         movwf   FSR0H
019A   0012           00591         moviw   FSR0++
019B   00F8           00592         MOVWF   Param78
                      00593 ;
                      00594 ;Cmd_BeginMove
019C   3042           00595         movlw   Cmd_BeginMove
019D   0278           00596         subwf   Param78,W
019E   1D03           00597         SKPZ
019F   3???           00598         bra     I2C_DI_BM_End
                      00599 ;
01A0   10B4           00600         BCF     MotorFlagsX,InPosition  ;move it
01A1   0008           00601         return
01A2                  00602 I2C_DI_BM_End:
                      00603 ;Cmd_Home
01A2   3048           00604         movlw   Cmd_Home
01A3   0278           00605         subwf   Param78,W
01A4   1D03           00606         SKPZ
01A5   3???           00607         bra     Cmd_Home_End
                      00608 ;
01A6   01BA           00609         clrf    CurrentPositionX
01A7   01BB           00610         clrf    CurrentPositionX+1
01A8   0008           00611         return
01A9                  00612 Cmd_Home_End:
                      00613 ;Cmd_MoveRel
01A9   3052           00614         movlw   Cmd_MoveRel
01AA   0278           00615         subwf   Param78,W
01AB   1D03           00616         SKPZ
01AC   3???           00617         bra     I2C_DI_MoveRel_End
                      00618 ;
01AD   0012           00619         moviw   FSR0++
01AE   00B8           00620         movwf   StepsToGoXLo
01AF   0012           00621         moviw   FSR0++
01B0   00B9           00622         movwf   StepsToGoXHi
01B1   0008           00623         return
01B2                  00624 I2C_DI_MoveRel_End:
                      00625 ;Cmd_PosAbs
01B2   3050           00626         movlw   Cmd_PosAbs
01B3   0278           00627         subwf   Param78,W
01B4   1D03           00628         SKPZ
01B5   3???           00629         bra     Cmd_PosAbs_End
                      00630 ;
01B6   0012           00631         moviw   FSR0++
01B7   00B3           00632         movwf   DestinationX
01B8   0012           00633         moviw   FSR0++
01B9   00B4           00634         movwf   DestinationX+1
01BA   083A           00635         movf    CurrentPositionX,W
01BB   0233           00636         subwf   DestinationX,W
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 26

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01BC   00F9           00637         movwf   Param79
01BD   083B           00638         movf    CurrentPositionX+1,W
01BE   3B34           00639         subwfb  DestinationX+1,W
01BF   00FA           00640         movwf   Param7A
                      00641         
01C0   1FFA           00642         btfss   Param7A,7
01C1   3???           00643         bra     Cmd_PosAbs_PosMov
01C2   1534           00644         bsf     MotorFlagsX,RevDirection
01C3   01B8           00645         clrf    StepsToGoXLo
01C4   01B9           00646         clrf    StepsToGoXHi
01C5   0879           00647         movf    Param79,W
01C6   02B8           00648         subwf   StepsToGoXLo,F
01C7   087A           00649         movf    Param7A,W
01C8   3BB9           00650         subwfb  StepsToGoXHi,F
01C9   0008           00651         return
                      00652 ;
01CA   1134           00653 Cmd_PosAbs_PosMov       bcf     MotorFlagsX,RevDirection
01CB   0879           00654         movf    Param79,W
01CC   00B8           00655         movwf   StepsToGoXLo
01CD   087A           00656         movf    Param7A,W
01CE   00B9           00657         movwf   StepsToGoXHi
                      00658 ;
01CF   10B4           00659         BCF     MotorFlagsX,InPosition  ;move it
01D0   0008           00660         return
                      00661 ;
01D1                  00662 Cmd_PosAbs_End:
                      00663 ;Cmd_Dir        
01D1   3044           00664         movlw   Cmd_Dir
01D2   0278           00665         subwf   Param78,W
01D3   1D03           00666         SKPZ
01D4   3???           00667         bra     I2C_DI_Dir_End
                      00668 ;
01D5   0022           00669         BANKSEL LATA    ;bank 2
01D6   30FE           00670         movlw   Dir_BitIMask
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01D7   050D           00671         andwf   Dir_BitLat,W
01D8   1B80           00672         btfsc   INDF0,7
01D9   3801           00673         iorlw   Dir_BitMask
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01DA   008D           00674         movwf   Dir_BitLat
01DB   0020           00675         movlb   0       ;bank 0
01DC   1134           00676         bcf     MotorFlagsX,RevDirection
01DD   1B80           00677         btfsc   INDF0,7
01DE   1534           00678         bsf     MotorFlagsX,RevDirection
01DF   0008           00679         return
01E0                  00680 I2C_DI_Dir_End:
                      00681 ;Cmd_MaxSpd
01E0   304D           00682         movlw   Cmd_MaxSpd      ;MaxSpeedX
01E1   0278           00683         subwf   Param78,W
01E2   1D03           00684         SKPZ
01E3   3???           00685         bra     I2C_DI_MaxSpd_End
                      00686 ;
01E4   0012           00687         moviw   FSR0++
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 27

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

01E5   00B6           00688         movwf   MaxSpeedX
01E6   0008           00689         return
01E7                  00690 I2C_DI_MaxSpd_End:
                      00691 ;Cmd_MinSpd
01E7   304E           00692         movlw   Cmd_MinSpd      ;MinSpeedX
01E8   0278           00693         subwf   Param78,W
01E9   1D03           00694         SKPZ
01EA   3???           00695         bra     I2C_DI_MinSpd_End
                      00696 ;
01EB   0012           00697         moviw   FSR0++
01EC   00B5           00698         movwf   MinSpeedX
01ED   0008           00699         return
01EE                  00700 I2C_DI_MinSpd_End:
                      00701 ;Cmd_GPIO_DDR GPIO data direction
01EE   304F           00702         movlw   Cmd_GPIO_DDR    ;TRISA:0..3
01EF   0278           00703         subwf   Param78,W
01F0   1D03           00704         SKPZ
01F1   3???           00705         bra     I2C_DI_GPIO_DDR_End
                      00706 ;
01F2   0021           00707         movlb   1       ;bank 1
01F3   300F           00708         movlw   0x0F
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01F4   040C           00709         iorwf   TRISA,W ;default low buts to inputs
01F5   00F8           00710         movwf   Param78
01F6   0012           00711         moviw   FSR0++
01F7   38F0           00712         iorlw   0xF0
01F8   0578           00713         andwf   Param78,W
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
01F9   008C           00714         movwf   TRISA   
01FA   0020           00715         movlb   0       ;bank 0
01FB   0008           00716         return
01FC                  00717 I2C_DI_GPIO_DDR_End:
                      00718 ;Cmd_GPIO_Dat GPIO data
01FC   3051           00719         movlw   Cmd_GPIO_Dat    ;LATA:0..3
01FD   0278           00720         subwf   Param78,W
01FE   1D03           00721         SKPZ
01FF   3???           00722         bra     I2C_DI_GPIO_Dat_End
                      00723 ;
0200   0022           00724         movlb   2       ;bank 2
0201   300F           00725         movlw   0x0F    ;keep upper nibble
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0202   040C           00726         iorwf   LATA,W  
0203   00F8           00727         movwf   Param78
0204   0012           00728         moviw   FSR0++
0205   38F0           00729         iorlw   0xF0    ;keep lower nibble
0206   0578           00730         andwf   Param78,W
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0207   008C           00731         movwf   LATA    
0208   0020           00732         movlb   0       ;bank 0
0209   0008           00733         return
                      00734 ;
020A                  00735 I2C_DI_GPIO_Dat_End:
                      00736 ;Cmd_SetI2CAddr I2C Address
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 28

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

020A   307A           00737         movlw   Cmd_SetI2CAddr
020B   0278           00738         subwf   Param78,W
020C   1D03           00739         SKPZ
020D   3???           00740         bra     Cmd_SetI2CAddr_End
                      00741 ;
020E   0012           00742         moviw   FSR0++
020F   00AF           00743         movwf   I2CAddr
0210   2???           00744         call    SaveParams      ;reboot required to use it.
0211   0008           00745         return
                      00746 ;
0212                  00747 Cmd_SetI2CAddr_End:
0212   0008           00748         RETURN
                      00749 ;
                      00750 ;==============================================================
                      00751 ;
                      00752 ; Send all stepper data to master (8 bytes)
                      00753 ;
0213   0020           00754 I2C_DataSender  movlb   0       ; bank 0
0214   1872           00755         BTFSC   I2C_TXLocked    ;Locked?
0215   0008           00756         RETURN          ; Yes
                      00757 ;
0216   3020           00758         movlw   low I2C_ARRAY_TX
0217   0084           00759         movwf   FSR0L
0218   3001           00760         movlw   high I2C_ARRAY_TX
0219   0085           00761         movwf   FSR0H
                      00762 ;
021A   3034           00763         movlw   low MotorFlagsX
021B   0086           00764         movwf   FSR1L
021C   3000           00765         movlw   high MotorFlagsX
021D   0087           00766         movwf   FSR1H
                      00767 ;
021E   3009           00768         movlw   0x09
021F   00F8           00769         movwf   Param78
0220   0016           00770 I2C_DataSender_L1       moviw   FSR1++
0221   001A           00771         movwi   FSR0++
0222   0BF8           00772         decfsz  Param78,F
0223   2???           00773         goto    I2C_DataSender_L1
                      00774 ;
0224   0008           00775         RETURN
                      00776 ;
                      00777 ;=========================================================================================
                      00778 ;=========================================================================================
                      00779 ;
                      00780 ;
                      00781 ;
                      00782 ;
                      00783         include StepperLib.inc
                      00001 ;-----------------------------------------------------------------------------------------
                      00002 ; Stepper Driver Library
                      00003 ; File: StepperLib.inc
                      00004 ;    Date:          11/19/2015
                      00005 ;    File Version:  1.0d1
                      00006 ;    
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 29

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00007 ; Written for PIC_Class by David M. Flynn
                      00008 ; dflynn.oxfordvue@gmail.com
                      00009 ; http://Github.com/DavidMFlynn
                      00010 ;=========================================================================================
                      00011 ;    History:
                      00012 ;
                      00013 ; 1.0d1   11/16/2013    First Rev'd version.  PIC16F1847 version.
                      00014 ;       Moved routines from main program.
                      00015 ;
                      00016 ;=========================================================================================
                      00017 ; Routines:
                      00018 ;
                      00019 ; ISR_MotorMove Interupt service routine, Call if CCP1IF is set
                      00020 ; MotorTest     Optional motor test, useMotorTest
                      00021 ; GetStepTimeLo Speed table low byte, W=Index >> W=Value
                      00022 ; GetStepTimeHi Speed table high byte, W=Index >> W=Value
                      00023 ;
                      00024         ifndef useMotorTest
                      00025         constant        useMotorTest=0
                      00026         endif
                      00027 ;-----------------------------------------------------------------------------------------
                      00028 ; Variables: Put a beginning of main program
                      00029 ;
                      00030 ; Speed control constants
                      00031 ;
  00000066            00032 kMaxSpeed       EQU     .102    ;a102 = 209 in/min
  00000000            00033 kUseDSTable     EQU     0
  00000001            00034 kUseVSTable     EQU     1       ;starts at 5.4 in/min
  00000001            00035 kUseTable2      EQU     1       ;2000 steps / inch
  00000000            00036 kUseTable5      EQU     0       ;5000 steps / inch
                      00037 ;
                      00038 ; Stepper Driver Variables, somewhere in RAM
                      00039 ;       cblock
                      00040 ;
                      00041 ;       MotorFlagsX
                      00042 ;       MaxSpeedX               ;0..kMaxSpeed
                      00043 ;       CurSpeedX
                      00044 ;       StepsToGoXLo
                      00045 ;       StepsToGoXHi
                      00046 ;       CurrentPositionX:2
                      00047 ;
                      00048 ;       endc
                      00049 ;MotorFlags Bits
                      00050 ;InMotion       EQU     0       ;Set while motor is moving
                      00051 ;InPosition     EQU     1       ;Set when move is done, clear to start move
                      00052 ;RevDirection   EQU     2       ;Clr to got forward, Set to go reverse dir
                      00053 ;
                      00054 ;-----------------------------------------------------------------------------------------
                      00055 ; Interupt service routine
                      00056 ;  Call if CCP1IF is set
                      00057 ;
0225   1C34           00058 ISR_MotorMove   BTFSS   MotorFlagsX,InMotion    ;Did we just move?
0226   2???           00059         GOTO    ISR_MM_NoMove   ; No
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 30

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0227   3001           00060         MOVLW   0x01
0228   1D34           00061         BTFSS   MotorFlagsX,RevDirection        ;Moving Reverse?
0229   2???           00062         GOTO    ISR_MM_Fwd      ; No
                      00063 ; Decrement the position        
022A   02BA           00064         SUBWF   CurrentPositionX,F      ; Yes, Dec pos
022B   0103           00065         CLRW
022C   3BBB           00066         SUBWFB  CurrentPositionX+1,F
022D   2???           00067         GOTO    ISR_MM_StepsToGo
                      00068 ; Increment the position
022E   07BA           00069 ISR_MM_Fwd      ADDWF   CurrentPositionX,F
022F   0103           00070         CLRW
0230   3DBB           00071         ADDWFC  CurrentPositionX+1,F
                      00072 ;
0231                  00073 ISR_MM_StepsToGo:
                      00074 ; Decrement step counter
0231   3039           00075         MOVLW   StepsToGoXHi
0232   0185           00076         CLRF    FSR0H
0233   2???           00077         CALL    DecTimer
0234   0839           00078         MOVF    StepsToGoXHi,W
0235   0438           00079         IORWF   StepsToGoXLo,W
0236   1903           00080         SKPNZ           ;Was that the last step?
0237   14B4           00081         BSF     MotorFlagsX,InPosition  ; Yes, move done
                      00082 ;
                      00083 ;       
0238                  00084 ISR_MM_NoMove:
0238   0025           00085         BANKSEL CCP1CON
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0239   0193           00086         CLRF    CCP1CON ;reset the CCP
                      00087 ;
023A   0022           00088         BANKSEL LATA
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
023B   118D           00089         BCF     Step_Bit        ;output off
                      00090 ;
023C   0025           00091         BANKSEL CCP1CON
                      00092 ; set the time for the next step
023D   3037           00093         MOVLW   CurSpeedX
023E   0086           00094         MOVWF   FSR1L
023F   0187           00095         CLRF    FSR1H
0240   0801           00096         MOVF    INDF1,W
0241   2???           00097         CALL    GetStepTimeHi
0242   00A2           00098         MOVWF   ISRScratch
0243   0801           00099         MOVF    INDF1,W
0244   2???           00100         CALL    GetStepTimeLo
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0245   0791           00101         ADDWF   CCPR1L,F
0246   0822           00102         MOVF    ISRScratch,W
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0247   3D92           00103         ADDWFC  CCPR1H,F
                      00104 ;
                      00105 ;If InPosition then Idle else Pulse next cylcle
0248   3034           00106         MOVLW   low MotorFlagsX
0249   0086           00107         MOVWF   FSR1L
024A   1881           00108         BTFSC   INDF1,InPosition        ;InPosition?
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 31

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

024B   2???           00109         GOTO    ISR_MotorMove_1 ; Yes
024C   3008           00110         MOVLW   CCP1CON_Set     ; No, we are moving
024D   1401           00111         BSF     INDF1,InMotion  ;This cycle will output a pulse
024E   2???           00112         GOTO    ISR_MotorMove_2
                      00113 ;
024F   300A           00114 ISR_MotorMove_1 MOVLW   CCP1CON_Run     ;Idle the CCP w/o pulses
0250   1001           00115         BCF     INDF1,InMotion  ;Not moving
Message[302]: Register in operand not in bank 0.  Ensure that bank bits are correct.
0251   0093           00116 ISR_MotorMove_2 MOVWF   CCP1CON
                      00117 ;
                      00118 ;       
0252   0020           00119         BANKSEL MotorFlagsX             
0253   1C34           00120         BTFSS   MotorFlagsX,InMotion    ;Moving?
0254   2???           00121         GOTO    ISR_MM_GoSlow   ; No
                      00122 ; Calculate time of next step
0255   18B4           00123         BTFSC   MotorFlagsX,InPosition  ;Last Step
0256   2???           00124         GOTO    ISR_MM_GoSlow   ; Yes, set slowest speed
0257   08B9           00125         MOVF    StepsToGoXHi,F
0258   1D03           00126         SKPZ            ;>= 256 steps to go?
0259   2???           00127         GOTO    ISR_MM_IncSpd
                      00128 ;
                      00129 ; if StepsToGoXLo>(CurSpeedX-MinSpeedX) then ISR_MM_IncSpd else ISR_MM_DecSpd
025A   0835           00130         MOVF    MinSpeedX,W
025B   0237           00131         SUBWF   CurSpeedX,W     ;W=CurSpeedX-MinSpeedX
025C   00A2           00132         MOVWF   ISRScratch
025D   0838           00133         MOVF    StepsToGoXLo,W
025E   0237           00134         SUBWF   CurSpeedX,W     ;W=CurSpeedX-StepsToGoXLo
025F   1C03           00135         BTFSS   STATUS,C        ;StepsToGoXLo>=CurSpeedX?
0260   2???           00136         GOTO    ISR_MM_IncSpd   ; Yes
                      00137 ;
0261   0837           00138 ISR_MM_DecSpd   MOVF    CurSpeedX,W
0262   0235           00139         SUBWF   MinSpeedX,W
0263   1D03           00140         SKPZ            ;At slowest?
0264   03B7           00141         DECF    CurSpeedX,F     ; No, go slower
0265   2???           00142         GOTO    ISR_MotorMove_3 
                      00143 ;       
0266   0836           00144 ISR_MM_IncSpd   MOVF    MaxSpeedX,W
0267   0237           00145         SUBWF   CurSpeedX,W
0268   1D03           00146         SKPZ            ;MaxSpeedX=CurSpeedX?
0269   0AB7           00147         INCF    CurSpeedX,F     ; No, CurSpeedX++
026A   2???           00148         GOTO    ISR_MotorMove_3
                      00149 ;
026B   0835           00150 ISR_MM_GoSlow   MOVF    MinSpeedX,W
026C   00B7           00151         MOVWF   CurSpeedX
                      00152 ;       
026D   1111           00153 ISR_MotorMove_3 BCF     PIR1,CCP1IF
026E   0008           00154         return
                      00155 ;
                      00156         if useMotorTest
                      00157 ;=========================================================================================
                      00158 ; Motor test
                      00159 ;
                      00160 MotorTest:
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 32

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00161         BANKSEL MotorTestTmrH
                      00162         MOVF    MotorTestTmrH,W
                      00163         IORWF   MotorTestTmrL,W
                      00164         SKPZ
                      00165         GOTO    NOTZERO
                      00166 ;
                      00167         BTFSC   StartedIt
                      00168         GOTO    AlreadyDid
                      00169         BSF     StartedIt
                      00170 ;
                      00171 ; Start a 1 inch (2000 steps) move max speed = a46 (87.8 in/min)
                      00172 ;       MOVLW   .95     ;195.4 in/min good
                      00173 ;       MOVLW   .102    ;a102 209.8 in/min
                      00174         MOVLW   .95
                      00175         MOVWF   MaxSpeedX
                      00176 DoItAgain       MOVLW   Low .6000
                      00177         MOVWF   StepsToGoXLo
                      00178         MOVLW   High .6000
                      00179         MOVWF   StepsToGoXHi
                      00180         BCF     MotorFlagsX,InPosition  ;move it
                      00181 ;
                      00182 AlreadyDid:
                      00183         BTFSS   MotorFlagsX,InPosition  ;there yet?
                      00184         GOTO    NotYet
                      00185         BANKSEL LATA
                      00186         MOVLW   Dir_BitMask
                      00187         XORWF   Dir_BitLat,F
                      00188         MOVLW   MotorFlagsX
                      00189         MOVWF   FSR0L
                      00190         CLRF    FSR0H
                      00191         BCF     INDF0,RevDirection
                      00192         BTFSC   Dir_Bit
                      00193         BSF     INDF0,RevDirection
                      00194 ;
                      00195         MOVLB   0x00
                      00196         BCF     StartedIt
                      00197         MOVLW   .200
                      00198         MOVWF   MotorTestTmrL
                      00199 ;
                      00200 NotYet:
                      00201 NOTZERO:
                      00202         return
                      00203         endif
                      00204 ;
                      00205         if kUseTable2
                      00206 ;=========================================================================================
                      00207 ; Speed tables for 2000 steps per inch at 0.5uS resolution, max kMaxSpeed=.125
                      00208 ; from 1 inch per minute (dead slow) accelerating 1.1x per step
                      00209 ; table "a" from 5.4 in/min (very slow) accelerating 1.1x per step
                      00210 ; table "b" from 29.1 in/min (slow) accelerating 1.05x per step
                      00211 ;
                      00212         ORG     0x0700  ;put up in top of memory
                      00213 ;
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 33

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00214 ; Entry: W = speed table offset 0..kMaxSpeed
0700                  00215 GetStepTimeLo:
0700   31??           00216         MOVLP   High GetStepTimeLo
0701   0782           00217         ADDWF   PCL,F
                      00218         if kUseDSTable
                      00219         RETLW   Low .60000      ;1 in/min = 24000c/step
                      00220         RETLW   Low .54000
                      00221         RETLW   Low .48600
                      00222         RETLW   Low .43740
                      00223         RETLW   Low .39366
                      00224         RETLW   Low .35429
                      00225         RETLW   Low .31886
                      00226         RETLW   Low .28697
                      00227         RETLW   Low .25828
                      00228         RETLW   Low .23245
                      00229         RETLW   Low .20921
                      00230         RETLW   Low .18829
                      00231         RETLW   Low .16935
                      00232         RETLW   Low .15251
                      00233         RETLW   Low .13726
                      00234         RETLW   Low .12353      ;15 4.86 in/min
                      00235         endif
                      00236         if kUseVSTable
0702   346E           00237         RETLW   Low .11118      ;16/a0 5.4 in/min
0703   3416           00238         RETLW   Low .10006
0704   342E           00239         RETLW   Low .9006
0705   34A9           00240         RETLW   Low .8105
0706   347F           00241         RETLW   Low .7295
0707   34A5           00242         RETLW   Low .6565
0708   3414           00243         RETLW   Low .5908
0709   34C6           00244         RETLW   Low .5318
070A   34B1           00245         RETLW   Low .4785
070B   34D3           00246         RETLW   Low .4307
070C   3425           00247         RETLW   Low .3877
070D   34A1           00248         RETLW   Low .3489
070E   3444           00249         RETLW   Low .3140
070F   340A           00250         RETLW   Low .2826
0710   34EF           00251         RETLW   Low .2543
0711   34F1           00252         RETLW   Low .2289       ;31/a15 26.21 in/min
                      00253         endif
0712   340C           00254         RETLW   Low .2060       ;32/a16/b0 29.13 in/min 0.95x
0713   34A5           00255         RETLW   Low .1957
0714   3443           00256         RETLW   Low .1859
0715   34E6           00257         RETLW   Low .1766
0716   348E           00258         RETLW   Low .1678
0717   343A           00259         RETLW   Low .1594
0718   34EA           00260         RETLW   Low .1514
0719   349F           00261         RETLW   Low .1439
071A   3457           00262         RETLW   Low .1367
071B   3412           00263         RETLW   Low .1298
071C   34D1           00264         RETLW   Low .1233
071D   3494           00265         RETLW   Low .1172
071E   3459           00266         RETLW   Low .1113
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 34

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

071F   3421           00267         RETLW   Low .1057
0720   34ED           00268         RETLW   Low .1005
0721   34BA           00269         RETLW   Low .954        ;47/a31/b15 62.9 in/min
0722   348A           00270         RETLW   Low .906        ;48/a32/b16 66.2 in/min 0.98x
0723   3478           00271         RETLW   Low .888
0724   3466           00272         RETLW   Low .870
0725   3455           00273         RETLW   Low .853
0726   3444           00274         RETLW   Low .836
0727   3433           00275         RETLW   Low .819
0728   3423           00276         RETLW   Low .803
0729   3413           00277         RETLW   Low .787
072A   3403           00278         RETLW   Low .771
072B   34F3           00279         RETLW   Low .755
072C   34E4           00280         RETLW   Low .740        ;58
072D   34D5           00281         RETLW   Low .725
072E   34C7           00282         RETLW   Low .711
072F   34B9           00283         RETLW   Low .697
0730   34AB           00284         RETLW   Low .683        ;62/a46/b30 87.8 in/min
0731   349D           00285         RETLW   Low .669        ;63/a47/b31 89.7 in/min
0732   3496           00286         RETLW   Low .662        ;64/a48/b32 x.98
0733   3490           00287         RETLW   Low .656
0734   3483           00288         RETLW   Low .643
0735   3476           00289         RETLW   Low .630
0736   3469           00290         RETLW   Low .617
0737   345D           00291         RETLW   Low .605
0738   3451           00292         RETLW   Low .593
0739   3445           00293         RETLW   Low .581        ;71/a55/b39 103.3 in/min
073A   3439           00294         RETLW   Low .569
073B   342E           00295         RETLW   Low .558
073C   3423           00296         RETLW   Low .547
073D   3418           00297         RETLW   Low .536
073E   340D           00298         RETLW   Low .525
073F   3403           00299         RETLW   Low .515
0740   34F9           00300         RETLW   Low .505
0741   34EF           00301         RETLW   Low .495        ;79/a63/b47 121.2 in/min
0742   34E5           00302         RETLW   Low .485        ;80/a64/b48 123.7 in/min
0743   34DE           00303         RETLW   Low .478        ;x.985
0744   34D7           00304         RETLW   Low .471
0745   34D0           00305         RETLW   Low .464
0746   34C9           00306         RETLW   Low .457
0747   34C2           00307         RETLW   Low .450
0748   34BB           00308         RETLW   Low .443
0749   34B4           00309         RETLW   Low .436        ;87/a71 
074A   34AD           00310         RETLW   Low .429
074B   34A7           00311         RETLW   Low .423
074C   34A1           00312         RETLW   Low .417        ;90/a74 
074D   349B           00313         RETLW   Low .411
074E   3495           00314         RETLW   Low .405        ;92/a76 
074F   348F           00315         RETLW   Low .399        ; 
0750   3489           00316         RETLW   Low .393
0751   3483           00317         RETLW   Low .387        ;95/a79/b63 155 in/min
0752   347D           00318         RETLW   Low .381        ;96/a80/b64 157.5 in/min
0753   3477           00319         RETLW   Low .375
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 35

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0754   3471           00320         RETLW   Low .369
0755   346B           00321         RETLW   Low .363
0756   3466           00322         RETLW   Low .358        ;100/a84/b68
0757   3461           00323         RETLW   Low .353
0758   345C           00324         RETLW   Low .348        ;102/a86/b70
0759   3457           00325         RETLW   Low .343        ;103/a87/b71 174.9 in/min
075A   3452           00326         RETLW   Low .338
075B   344D           00327         RETLW   Low .333
075C   3448           00328         RETLW   Low .328
075D   3443           00329         RETLW   Low .323        ;185.7 in/min
075E   3440           00330         RETLW   Low .320        ;x.99
075F   343D           00331         RETLW   Low .317
0760   343A           00332         RETLW   Low .314        ;110
0761   3437           00333         RETLW   Low .311        ;111
0762   3433           00334         RETLW   Low .307        ;112/a95/b80 195.4 in/min
0763   3430           00335         RETLW   Low .304
0764   342D           00336         RETLW   Low .301
0765   342A           00337         RETLW   Low .298
0766   3427           00338         RETLW   Low .295
0767   3424           00339         RETLW   Low .292
0768   3421           00340         RETLW   Low .289
0769   341E           00341         RETLW   Low .286        ;118/a102/b86 209.8 in/min
076A   341B           00342         RETLW   Low .283
076B   3418           00343         RETLW   Low .280
076C   3415           00344         RETLW   Low .277
076D   3412           00345         RETLW   Low .274
076E   340F           00346         RETLW   Low .271
076F   340C           00347         RETLW   Low .268        ;125/a109/b93
                      00348 ;bad data
                      00349         if kUseDSTable==0
0770   3409           00350         RETLW   Low .265        ;a110/b94 226.4 in/min
0771   3406           00351         RETLW   Low .262        
0772   3403           00352         RETLW   Low .259        
0773   3400           00353         RETLW   Low .256        
0774   34FD           00354         RETLW   Low .253
0775   34FA           00355         RETLW   Low .250
0776   34F8           00356         RETLW   Low .248        ;a116/b100
0777   34F6           00357         RETLW   Low .246        
0778   34F4           00358         RETLW   Low .244
0779   34F2           00359         RETLW   Low .242
077A   34F0           00360         RETLW   Low .240
077B   34EE           00361         RETLW   Low .238
077C   34EC           00362         RETLW   Low .236
077D   34EA           00363         RETLW   Low .234
077E   34E8           00364         RETLW   Low .232
077F   34E6           00365         RETLW   Low .230        ;a125/b109
                      00366         if kUseVSTable==0
                      00367         RETLW   Low .228        ;b110 263.2 in/min end of VS table
                      00368         RETLW   Low .226        
                      00369         RETLW   Low .224
                      00370         RETLW   Low .222        ;b113
                      00371         RETLW   Low .220        
                      00372         RETLW   Low .218
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 36

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00373         RETLW   Low .216
                      00374         RETLW   Low .214
                      00375         RETLW   Low .212
                      00376         RETLW   Low .210
                      00377         RETLW   Low .208
                      00378         RETLW   Low .206
                      00379         RETLW   Low .204
                      00380         RETLW   Low .202
                      00381         RETLW   Low .200
                      00382         RETLW   Low .198        ;b125 303 in/min end of HS table
                      00383         endif           ; if kUseVSTable==0
                      00384         endif           ; if kUseDSTable==0
                      00385         ORG     0x0780  ;put up in top of memory
                      00386 ; Entry: W = speed table offset 0..kMaxSpeed
0780                  00387 GetStepTimeHi:
0780   31??           00388         MOVLP   High GetStepTimeHi
0781   0782           00389         ADDWF   PCL,F
                      00390         if kUseDSTable
                      00391         RETLW   High .60000     ;1 in/min = 24000c/step
                      00392         RETLW   High .54000
                      00393         RETLW   High .48600
                      00394         RETLW   High .43740
                      00395         RETLW   High .39366
                      00396         RETLW   High .35429
                      00397         RETLW   High .31886
                      00398         RETLW   High .28697
                      00399         RETLW   High .25828
                      00400         RETLW   High .23245
                      00401         RETLW   High .20921
                      00402         RETLW   High .18829
                      00403         RETLW   High .16935
                      00404         RETLW   High .15251
                      00405         RETLW   High .13726
                      00406         RETLW   High .12353     ;15 4.86 in/min
                      00407         endif
                      00408         if kUseVSTable
0782   342B           00409         RETLW   High .11118     ;16/a0 5.4 in/min
0783   3427           00410         RETLW   High .10006
0784   3423           00411         RETLW   High .9006
0785   341F           00412         RETLW   High .8105
0786   341C           00413         RETLW   High .7295
0787   3419           00414         RETLW   High .6565
0788   3417           00415         RETLW   High .5908
0789   3414           00416         RETLW   High .5318
078A   3412           00417         RETLW   High .4785
078B   3410           00418         RETLW   High .4307
078C   340F           00419         RETLW   High .3877
078D   340D           00420         RETLW   High .3489
078E   340C           00421         RETLW   High .3140
078F   340B           00422         RETLW   High .2826
0790   3409           00423         RETLW   High .2543
0791   3408           00424         RETLW   High .2289      ;31/a15 26.21 in/min
                      00425         endif
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 37

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0792   3408           00426         RETLW   High .2060      ;32/a16/b0 29.13 in/min 0.95x
0793   3407           00427         RETLW   High .1957
0794   3407           00428         RETLW   High .1859
0795   3406           00429         RETLW   High .1766
0796   3406           00430         RETLW   High .1678
0797   3406           00431         RETLW   High .1594
0798   3405           00432         RETLW   High .1514
0799   3405           00433         RETLW   High .1439
079A   3405           00434         RETLW   High .1367
079B   3405           00435         RETLW   High .1298
079C   3404           00436         RETLW   High .1233
079D   3404           00437         RETLW   High .1172
079E   3404           00438         RETLW   High .1113
079F   3404           00439         RETLW   High .1057
07A0   3403           00440         RETLW   High .1005
07A1   3403           00441         RETLW   High .954       ;47/a31/b15 62.9 in/min
07A2   3403           00442         RETLW   High .906       ;48/a32/b16 66.2 in/min 0.98x
07A3   3403           00443         RETLW   High .888
07A4   3403           00444         RETLW   High .870
07A5   3403           00445         RETLW   High .853
07A6   3403           00446         RETLW   High .836
07A7   3403           00447         RETLW   High .819
07A8   3403           00448         RETLW   High .803
07A9   3403           00449         RETLW   High .787
07AA   3403           00450         RETLW   High .771
07AB   3402           00451         RETLW   High .755
07AC   3402           00452         RETLW   High .740       ;58
07AD   3402           00453         RETLW   High .725
07AE   3402           00454         RETLW   High .711
07AF   3402           00455         RETLW   High .697
07B0   3402           00456         RETLW   High .683       ;62/a46/b30 87.8 in/min
07B1   3402           00457         RETLW   High .669       ;63/a47/b31 89.7 in/min
07B2   3402           00458         RETLW   High .662       ;64/a48/b32 x.98
07B3   3402           00459         RETLW   High .656
07B4   3402           00460         RETLW   High .643
07B5   3402           00461         RETLW   High .630
07B6   3402           00462         RETLW   High .617
07B7   3402           00463         RETLW   High .605
07B8   3402           00464         RETLW   High .593
07B9   3402           00465         RETLW   High .581       ;71/a55/b39 103.3 in/min
07BA   3402           00466         RETLW   High .569
07BB   3402           00467         RETLW   High .558
07BC   3402           00468         RETLW   High .547
07BD   3402           00469         RETLW   High .536
07BE   3402           00470         RETLW   High .525
07BF   3402           00471         RETLW   High .515
07C0   3401           00472         RETLW   High .505
07C1   3401           00473         RETLW   High .495       ;79/a63/b47 121.2 in/min
07C2   3401           00474         RETLW   High .485       ;80/a64/b48 123.7 in/min
07C3   3401           00475         RETLW   High .478       ;x.985
07C4   3401           00476         RETLW   High .471
07C5   3401           00477         RETLW   High .464
07C6   3401           00478         RETLW   High .457
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 38

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07C7   3401           00479         RETLW   High .450
07C8   3401           00480         RETLW   High .443
07C9   3401           00481         RETLW   High .436       ;87/a71 
07CA   3401           00482         RETLW   High .429
07CB   3401           00483         RETLW   High .423
07CC   3401           00484         RETLW   High .417       ;90/a74 
07CD   3401           00485         RETLW   High .411
07CE   3401           00486         RETLW   High .405       ;92/a76 
07CF   3401           00487         RETLW   High .399       ; 
07D0   3401           00488         RETLW   High .393
07D1   3401           00489         RETLW   High .387       ;95/a79/b63 155 in/min
07D2   3401           00490         RETLW   High .381       ;96/a80/b64 157.5 in/min
07D3   3401           00491         RETLW   High .375
07D4   3401           00492         RETLW   High .369
07D5   3401           00493         RETLW   High .363
07D6   3401           00494         RETLW   High .358       ;100/a84/b68
07D7   3401           00495         RETLW   High .353
07D8   3401           00496         RETLW   High .348       ;102/a86/b70
07D9   3401           00497         RETLW   High .343       ;103/a87/b71
07DA   3401           00498         RETLW   High .338
07DB   3401           00499         RETLW   High .333
07DC   3401           00500         RETLW   High .328
07DD   3401           00501         RETLW   High .323       ;185.7 in/min
07DE   3401           00502         RETLW   High .320       ;x.99
07DF   3401           00503         RETLW   High .317
07E0   3401           00504         RETLW   High .314
07E1   3401           00505         RETLW   High .311
07E2   3401           00506         RETLW   High .307       ;112/a95/b79 195.4 in/min
07E3   3401           00507         RETLW   High .304
07E4   3401           00508         RETLW   High .301
07E5   3401           00509         RETLW   High .298
07E6   3401           00510         RETLW   High .295
07E7   3401           00511         RETLW   High .292
07E8   3401           00512         RETLW   High .289
07E9   3401           00513         RETLW   High .286
07EA   3401           00514         RETLW   High .283
07EB   3401           00515         RETLW   High .280
07EC   3401           00516         RETLW   High .277
07ED   3401           00517         RETLW   High .274
07EE   3401           00518         RETLW   High .271
07EF   3401           00519         RETLW   High .268       ;125/a109/b93
                      00520         
                      00521 ;bad data
                      00522         if kUseDSTable==0
07F0   3401           00523         RETLW   High .265       ;a110/b94 226.4 in/min
07F1   3401           00524         RETLW   High .262       
07F2   3401           00525         RETLW   High .259       ;a111/b95
07F3   3401           00526         RETLW   High .256       ;a112/b96 
07F4   3400           00527         RETLW   High .253
07F5   3400           00528         RETLW   High .250
07F6   3400           00529         RETLW   High .248       ;a116/b100
07F7   3400           00530         RETLW   High .246       
07F8   3400           00531         RETLW   High .244
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 39

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

07F9   3400           00532         RETLW   High .242
07FA   3400           00533         RETLW   High .240
07FB   3400           00534         RETLW   High .238
07FC   3400           00535         RETLW   High .236
07FD   3400           00536         RETLW   High .234
07FE   3400           00537         RETLW   High .232
07FF   3400           00538         RETLW   High .230       ;a125/b109 
                      00539         if kUseVSTable==0
                      00540         RETLW   High .228       ;b110 263.2 in/min end of VS table
                      00541         RETLW   High .226       
                      00542         RETLW   High .224
                      00543         RETLW   High .222
                      00544         RETLW   High .220       ;b113
                      00545         RETLW   High .218
                      00546         RETLW   High .216
                      00547         RETLW   High .214
                      00548         RETLW   High .212
                      00549         RETLW   High .210
                      00550         RETLW   High .208
                      00551         RETLW   High .206
                      00552         RETLW   High .204
                      00553         RETLW   High .202
                      00554         RETLW   High .200
                      00555         RETLW   High .198       ;b125 303 in/min end of HS table
                      00556         endif           ; if kUseVSTable==0
                      00557         endif           ; if kUseDSTable==0
                      00558         endif           ;table for 2000 steps/inch
                      00559         if kUseTable5
                      00560 ;=========================================================================================
                      00561 ; Speed tables for 5000 steps per inch at 0.5uS resolution
                      00562 ; from 1 inch per minute (dead slow) accelerating 1.1x per step, max kMaxSpeed=58
                      00563 ; table "a" from 5.4 in/min (very slow), max kMaxSpeed=42
                      00564 ; table "b" from 29.1 in/min (slow), max kMaxSpeed=26
                      00565 ;
                      00566         ORG     0x0780  ;put up in top of memory
                      00567 ;
                      00568 ; Entry: W = speed table offset 0..kMaxSpeed
                      00569 GetStepTimeLo:
                      00570         MOVLP   High GetStepTimeLo
                      00571         ADDWF   PCL,F
                      00572         if kUseDSTable
                      00573         RETLW   Low .24000      ;1 in/min = 24000c/step
                      00574         RETLW   Low .21600
                      00575         RETLW   Low .19440
                      00576         RETLW   Low .17496
                      00577         RETLW   Low .15746
                      00578         RETLW   Low .14172
                      00579         RETLW   Low .12755
                      00580         RETLW   Low .11479
                      00581         RETLW   Low .10331
                      00582         RETLW   Low .9298
                      00583         RETLW   Low .8368
                      00584         RETLW   Low .7531
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 40

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00585         RETLW   Low .6778
                      00586         RETLW   Low .6100
                      00587         RETLW   Low .5490
                      00588         RETLW   Low .4941       ;15 4.86 in/min
                      00589         endif
                      00590         if kUseVSTable
                      00591         RETLW   Low .4447       ;a0 5.4 in/min
                      00592         RETLW   Low .4003
                      00593         RETLW   Low .3602
                      00594         RETLW   Low .3242
                      00595         RETLW   Low .2918
                      00596         RETLW   Low .2626
                      00597         RETLW   Low .2363
                      00598         RETLW   Low .2127
                      00599         RETLW   Low .1914
                      00600         RETLW   Low .1722
                      00601         RETLW   Low .1551
                      00602         RETLW   Low .1396
                      00603         RETLW   Low .1256
                      00604         RETLW   Low .1130
                      00605         RETLW   Low .1017
                      00606         RETLW   Low .916        ;31/a15 26.2 in/min
                      00607         endif
                      00608         RETLW   Low .824        ;32/a16/b0 29.1 in/min
                      00609         RETLW   Low .742
                      00610         RETLW   Low .668
                      00611         RETLW   Low .601
                      00612         RETLW   Low .541
                      00613         RETLW   Low .487        ;37/a21/b5 49.3 in/min
                      00614         RETLW   Low .438        ;38/a22/b6 MAX for 8Mhz
                      00615         RETLW   Low .394
                      00616         RETLW   Low .355
                      00617         RETLW   Low .320        ;41/a25/b9 75 in/min
                      00618         RETLW   Low .287
                      00619         RETLW   Low .259
                      00620         RETLW   Low .233
                      00621         RETLW   Low .210        ;45/a29/b13 114.3 in/min
                      00622         RETLW   Low .189
                      00623         RETLW   Low .170        ;47/a31/b15 141.2 in/min
                      00624         RETLW   Low .153
                      00625         RETLW   Low .138
                      00626         RETLW   Low .124        ;50/a34/b18 193.5 in/min
                      00627         RETLW   Low .112        ;51/a35/b19 214.3 in/min
                      00628         RETLW   Low .100        ;52/a36/b20 240 in/min
                      00629         RETLW   Low .90 ;53/a37/b21 266.7 in/min
                      00630         RETLW   Low .81 ;54/a38/b22 296.3 in/min
                      00631         RETLW   Low .73 ;55/a39/b23 328.8 in/min
                      00632         RETLW   Low .66 ;56/a40/b24 363.6 in/min
                      00633         RETLW   Low .60 ;57/a41/b25 400 in/min
                      00634         RETLW   Low .54 ;58/a42/b26 444.4 in/min
                      00635 ;
                      00636 ; Entry: W = speed table offset 0..kMaxSpeed
                      00637 GetStepTimeHi:
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 41

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00638         MOVLP   High GetStepTimeHi
                      00639         ADDWF   PCL,F
                      00640         if kUseDSTable
                      00641         RETLW   High .24000     ;1 in/min = 24000c/step
                      00642         RETLW   High .21600
                      00643         RETLW   High .19440
                      00644         RETLW   High .17496
                      00645         RETLW   High .15746
                      00646         RETLW   High .14172
                      00647         RETLW   High .12755
                      00648         RETLW   High .11479
                      00649         RETLW   High .10331
                      00650         RETLW   High .9298
                      00651         RETLW   High .8368
                      00652         RETLW   High .7531
                      00653         RETLW   High .6778
                      00654         RETLW   High .6100
                      00655         RETLW   High .5490
                      00656         RETLW   High .4941      ;15 4.86 in/min
                      00657         endif
                      00658         if kUseVSTable
                      00659         RETLW   High .4447      ;a0 5.4 in/min
                      00660         RETLW   High .4003
                      00661         RETLW   High .3602
                      00662         RETLW   High .3242
                      00663         RETLW   High .2918
                      00664         RETLW   High .2626
                      00665         RETLW   High .2363
                      00666         RETLW   High .2127
                      00667         RETLW   High .1914
                      00668         RETLW   High .1722
                      00669         RETLW   High .1551
                      00670         RETLW   High .1396
                      00671         RETLW   High .1256
                      00672         RETLW   High .1130
                      00673         RETLW   High .1017
                      00674         RETLW   High .916       ;31/a15 26.2 in/min
                      00675         endif
                      00676         RETLW   High .824       ;32/a16/b0 29.1 in/min
                      00677         RETLW   High .742
                      00678         RETLW   High .668
                      00679         RETLW   High .601
                      00680         RETLW   High .541
                      00681         RETLW   High .487       ;37/a21/b5 49.3 in/min
                      00682         RETLW   High .438
                      00683         RETLW   High .394
                      00684         RETLW   High .355
                      00685         RETLW   High .320       ;41/a25/b9 75 in/min
                      00686         RETLW   High .287
                      00687         RETLW   High .259
                      00688         RETLW   High .233
                      00689         RETLW   High .210       ;45/a29/b13 114.3 in/min
                      00690         RETLW   High .189
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 42

F648A Macros
LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00691         RETLW   High .170       ;47/a31/b15 141.2 in/min
                      00692         RETLW   High .153
                      00693         RETLW   High .138
                      00694         RETLW   High .124       ;50/a34/b18 193.5 in/min
                      00695         RETLW   High .112       ;51/a35/b19 214.3 in/min
                      00696         RETLW   High .100       ;52/a36/b20 240 in/min
                      00697         RETLW   High .90        ;53/a37/b21 266.7 in/min
                      00698         RETLW   High .81        ;54/a38/b22 296.3 in/min
                      00699         RETLW   High .73        ;55/a39/b23 328.8 in/min
                      00700         RETLW   High .66        ;56/a40/b24 363.6 in/min
                      00701         RETLW   High .60        ;57/a41/b25 400 in/min
                      00702         RETLW   High .54        ;58/a42/b26 444.4 in/min
                      00703         endif
                      00704 ;
                      00705 ; 
                      00706 ; 
                      00707 ;
                      00708 ;
                      00709 ;
                      00710 ;
                      00711 ;
                      00784 ;
Message[303]: Program word too large.  Truncated to core size. (EFA4)
Message[303]: Program word too large.  Truncated to core size. (DFFF)
2FA4 1FFF             00785         END
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 43

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

ABDEN                             00000000
ABDOVF                            00000007
ACKDT                             00000005
ACKEN                             00000004
ACKSTAT                           00000006
ACKTIM                            00000007
ADCON0                            0000009D
ADCON1                            0000009E
ADCS0                             00000004
ADCS1                             00000005
ADCS2                             00000006
ADDEN                             00000003
ADFM                              00000007
ADFVR0                            00000000
ADFVR1                            00000001
ADGO                              00000001
ADIE                              00000006
ADIF                              00000006
ADNREF                            00000002
ADON                              00000000
ADPREF0                           00000000
ADPREF1                           00000001
ADRES                             0000009B
ADRESH                            0000009C
ADRESL                            0000009B
AHEN                              00000001
ANSA0                             00000000
ANSA1                             00000001
ANSA2                             00000002
ANSA3                             00000003
ANSA4                             00000004
ANSB1                             00000001
ANSB2                             00000002
ANSB3                             00000003
ANSB4                             00000004
ANSB5                             00000005
ANSB6                             00000006
ANSB7                             00000007
ANSELA                            0000018C
ANSELB                            0000018D
APFCON0                           0000011D
APFCON1                           0000011E
All_In                            000000FF
All_Out                           00000000
BAUDCON                           0000019F
BCL1IE                            00000003
BCL1IF                            00000003
BCL2IE                            00000001
BCL2IF                            00000001
BEQ                               
BF                                00000000
BMI                               
BNE                               
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 44

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

BOEN                              00000004
BORCON                            00000116
BORRDY                            00000000
BPL                               
BRG16                             00000003
BRGH                              00000002
BSR                               00000008
BSR0                              00000000
BSR1                              00000001
BSR2                              00000002
BSR3                              00000003
BSR4                              00000004
BSR_SHAD                          00000FE6
C                                 00000000
C1HYS                             00000001
C1IE                              00000005
C1IF                              00000005
C1INTN                            00000006
C1INTP                            00000007
C1NCH0                            00000000
C1NCH1                            00000001
C1OE                              00000005
C1ON                              00000007
C1OUT                             00000006
C1PCH0                            00000004
C1PCH1                            00000005
C1POL                             00000004
C1SP                              00000002
C1SYNC                            00000000
C1TSEL0                           00000000
C1TSEL1                           00000001
C2HYS                             00000001
C2IE                              00000006
C2IF                              00000006
C2INTN                            00000006
C2INTP                            00000007
C2NCH0                            00000000
C2NCH1                            00000001
C2OE                              00000005
C2ON                              00000007
C2OUT                             00000006
C2PCH0                            00000004
C2PCH1                            00000005
C2POL                             00000004
C2SP                              00000002
C2SYNC                            00000000
C2TSEL0                           00000002
C2TSEL1                           00000003
C3TSEL0                           00000004
C3TSEL1                           00000005
C4TSEL0                           00000006
C4TSEL1                           00000007
CCP1AS                            00000295
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 45

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

CCP1AS0                           00000004
CCP1AS1                           00000005
CCP1AS2                           00000006
CCP1ASE                           00000007
CCP1CON                           00000293
CCP1CON_Clr                       00000009
CCP1CON_Run                       0000000A
CCP1CON_Set                       00000008
CCP1IE                            00000002
CCP1IF                            00000002
CCP1M0                            00000000
CCP1M1                            00000001
CCP1M2                            00000002
CCP1M3                            00000003
CCP1SEL                           00000000
CCP2AS                            0000029C
CCP2AS0                           00000004
CCP2AS1                           00000005
CCP2AS2                           00000006
CCP2ASE                           00000007
CCP2CON                           0000029A
CCP2IE                            00000000
CCP2IF                            00000000
CCP2M0                            00000000
CCP2M1                            00000001
CCP2M2                            00000002
CCP2M3                            00000003
CCP2SEL                           00000003
CCP3CON                           00000313
CCP3IE                            00000004
CCP3IF                            00000004
CCP3M0                            00000000
CCP3M1                            00000001
CCP3M2                            00000002
CCP3M3                            00000003
CCP4CON                           0000031A
CCP4IE                            00000005
CCP4IF                            00000005
CCP4M0                            00000000
CCP4M1                            00000001
CCP4M2                            00000002
CCP4M3                            00000003
CCPR1H                            00000292
CCPR1L                            00000291
CCPR2H                            00000299
CCPR2L                            00000298
CCPR3H                            00000312
CCPR3L                            00000311
CCPR4H                            00000319
CCPR4L                            00000318
CCPTMRS                           0000029E
CCPTMRS0                          0000029E
CDAFVR0                           00000002
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 46

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

CDAFVR1                           00000003
CFGS                              00000006
CHS0                              00000002
CHS1                              00000003
CHS2                              00000004
CHS3                              00000005
CHS4                              00000006
CKE                               00000006
CKP                               00000004
CLKRCON                           0000039A
CLKRDC0                           00000003
CLKRDC1                           00000004
CLKRDIV0                          00000000
CLKRDIV1                          00000001
CLKRDIV2                          00000002
CLKREN                            00000007
CLKROE                            00000006
CLKRSLR                           00000005
CM1CON0                           00000111
CM1CON1                           00000112
CM2CON0                           00000113
CM2CON1                           00000114
CMOUT                             00000115
CMP                               
CPSCH0                            00000000
CPSCH1                            00000001
CPSCH2                            00000002
CPSCH3                            00000003
CPSCON0                           0000001E
CPSCON1                           0000001F
CPSON                             00000007
CPSOUT                            00000001
CPSRM                             00000006
CPSRNG0                           00000002
CPSRNG1                           00000003
CREN                              00000004
CSRC                              00000007
C_SHAD                            00000000
ClearRam                          0000002F
ClearRam_2                        00000040
ClearRam_L2                       00000049
Cmd_BeginMove                     00000042
Cmd_Dir                           00000044
Cmd_GPIO_DDR                      0000004F
Cmd_GPIO_Dat                      00000051
Cmd_Home                          00000048
Cmd_Home_End                      000001A9
Cmd_MaxSpd                        0000004D
Cmd_MinSpd                        0000004E
Cmd_MoveRel                       00000052
Cmd_PosAbs                        00000050
Cmd_PosAbs_End                    000001D1
Cmd_PosAbs_PosMov                 000001CA
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 47

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

Cmd_SetI2CAddr                    0000007A
Cmd_SetI2CAddr_End                00000212
CopyToRam                         0000004E
CopyToRam_L1                      00000053
CurSpeedX                         00000037
CurrentPositionX                  0000003A
DACCON0                           00000118
DACCON1                           00000119
DACEN                             00000007
DACLPS                            00000006
DACNSS                            00000000
DACOE                             00000005
DACPSS0                           00000002
DACPSS1                           00000003
DACR0                             00000000
DACR1                             00000001
DACR2                             00000002
DACR3                             00000003
DACR4                             00000004
DC                                00000001
DC1B0                             00000004
DC1B1                             00000005
DC2B0                             00000004
DC2B1                             00000005
DC3B0                             00000004
DC3B1                             00000005
DC4B0                             00000004
DC4B1                             00000005
DC_SHAD                           00000001
DHEN                              00000000
D_NOT_A                           00000005
DecTimer                          00000072
DecTimer1                         00000071
DecTimer2                         0000006F
DecTimer3                         0000006D
DecTimer4                         0000006B
Delay100uS                        0000008B
Delay10uS                         00000089
Delay40uS                         0000008D
DelayWuS                          0000008E
DelayWuS_Loop                     0000008F
DestinationX                      00000033
Dir_Bit                           LATB,0
Dir_BitIMask                      000000FE
Dir_BitLat                        0000010D
Dir_BitMask                       00000001
ECCP1AS                           00000295
ECCP2AS                           0000029C
EEADR                             00000191
EEADRH                            00000192
EEADRL                            00000191
EEAddrTemp                        00000023
EECON1                            00000195
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 48

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

EECON2                            00000196
EEDAT                             00000193
EEDATH                            00000194
EEDATL                            00000193
EEDataTemp                        00000024
EEIE                              00000004
EEIF                              00000004
EEPGD                             00000007
EERead                            00000093
EEReadW                           00000092
EEWrite                           0000009B
EEWriteLoop                       000000AD
EEWriteW                          0000009A
EN_ED                             PORTB,5
F                                 00000001
FERR                              00000002
FREE                              00000004
FSR0                              00000004
FSR0H                             00000005
FSR0H_SHAD                        00000FE9
FSR0L                             00000004
FSR0L_SHAD                        00000FE8
FSR1                              00000006
FSR1H                             00000007
FSR1H_SHAD                        00000FEB
FSR1L                             00000006
FSR1L_SHAD                        00000FEA
FVRCON                            00000117
FVREN                             00000007
FVRRDY                            00000006
FirstRAMParam                     I2CAddr
Flags                             0000002D
GCEN                              00000007
GFlags                            Param72
GIE                               00000007
GO                                00000001
GO_NOT_DONE                       00000001
GPIOBits                          0000003C
GetStepTimeHi                     00000780
GetStepTimeLo                     00000700
HFIOFL                            00000003
HFIOFR                            00000004
HFIOFS                            00000000
HasISR                            00000080
I2CAddr                           0000002F
I2C_ADDRESS                       00000030
I2C_ARRAY_RX                      0000012A
I2C_ARRAY_TX                      00000120
I2C_DI_BM_End                     000001A2
I2C_DI_Dir_End                    000001E0
I2C_DI_GPIO_DDR_End               000001FC
I2C_DI_GPIO_Dat_End               0000020A
I2C_DI_MaxSpd_End                 000001E7
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 49

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

I2C_DI_MinSpd_End                 000001EE
I2C_DI_MoveRel_End                000001B2
I2C_DataInturp                    00000191
I2C_DataSender                    00000213
I2C_DataSender_L1                 00000220
I2C_ISR                           000000E4
I2C_Idle                          000000B3
I2C_NewRXData                     Param72,2
I2C_RXLocked                      Param72,1
I2C_RX_Init_Val                   000000AB
I2C_TXLocked                      Param72,0
I2C_TX_Init_Val                   000000AA
I2C_WRITE                         00000116
INDEX_I2C                         Param70
INDF0                             00000000
INDF1                             00000001
INTCON                            0000000B
INTE                              00000004
INTEDG                            00000006
INTF                              00000001
IOCBF                             00000396
IOCBF0                            00000000
IOCBF1                            00000001
IOCBF2                            00000002
IOCBF3                            00000003
IOCBF4                            00000004
IOCBF5                            00000005
IOCBF6                            00000006
IOCBF7                            00000007
IOCBN                             00000395
IOCBN0                            00000000
IOCBN1                            00000001
IOCBN2                            00000002
IOCBN3                            00000003
IOCBN4                            00000004
IOCBN5                            00000005
IOCBN6                            00000006
IOCBN7                            00000007
IOCBP                             00000394
IOCBP0                            00000000
IOCBP1                            00000001
IOCBP2                            00000002
IOCBP3                            00000003
IOCBP4                            00000004
IOCBP5                            00000005
IOCBP6                            00000006
IOCBP7                            00000007
IOCIE                             00000003
IOCIF                             00000000
IRCF0                             00000003
IRCF1                             00000004
IRCF2                             00000005
IRCF3                             00000006
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 50

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

IRQ_5                             00000023
IRQ_5_End                         0000002B
ISRScratch                        00000022
ISR_MM_DecSpd                     00000261
ISR_MM_Fwd                        0000022E
ISR_MM_GoSlow                     0000026B
ISR_MM_IncSpd                     00000266
ISR_MM_NoMove                     00000238
ISR_MM_StepsToGo                  00000231
ISR_MotorMove                     00000225
ISR_MotorMove_1                   0000024F
ISR_MotorMove_2                   00000251
ISR_MotorMove_3                   0000026D
InMotion                          00000000
InPosition                        00000001
Init_I2C                          000000B7
Init_I2C_L1                       000000BF
Init_I2C_L2                       000000C9
LATA                              0000010C
LATA0                             00000000
LATA1                             00000001
LATA2                             00000002
LATA3                             00000003
LATA4                             00000004
LATA6                             00000006
LATA7                             00000007
LATB                              0000010D
LATB0                             00000000
LATB1                             00000001
LATB2                             00000002
LATB3                             00000003
LATB4                             00000004
LATB5                             00000005
LATB6                             00000006
LATB7                             00000007
LED1_Bit                          00000004
LED1_Tris                         TRISA,LED1_Bit
LEDErrorTime                      0000000A
LEDTIME                           00000064
LED_Count                         00000021
LED_Time                          00000020
LFIOFR                            00000001
LOADFSR0                          
LOADFSR0W                         
LOADFSR1                          
LOADFSR1W                         
LWLO                              00000005
LastRAMParam                      MaxSpd
MC1OUT                            00000000
MC2OUT                            00000001
MDBIT                             00000000
MDCARH                            0000039F
MDCARL                            0000039E
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 51

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

MDCH0                             00000000
MDCH1                             00000001
MDCH2                             00000002
MDCH3                             00000003
MDCHODIS                          00000007
MDCHPOL                           00000006
MDCHSYNC                          00000005
MDCL0                             00000000
MDCL1                             00000001
MDCL2                             00000002
MDCL3                             00000003
MDCLODIS                          00000007
MDCLPOL                           00000006
MDCLSYNC                          00000005
MDCON                             0000039C
MDEN                              00000007
MDMS0                             00000000
MDMS1                             00000001
MDMS2                             00000002
MDMS3                             00000003
MDMSODIS                          00000007
MDOE                              00000006
MDOPOL                            00000004
MDOUT                             00000003
MDSLR                             00000005
MDSRC                             0000039D
MFIOFR                            00000002
MS1_Out                           LATA,6
MS2_Out                           LATB,2
MainLoop                          00000181
MaxSpd                            00000031
MaxSpeedX                         00000036
MinSpd                            00000030
MinSpeedX                         00000035
MotorFlagsX                       00000034
MoveTest_End                      00000190
NOT_BOR                           00000000
NOT_PD                            00000003
NOT_POR                           00000001
NOT_RI                            00000002
NOT_RMCLR                         00000003
NOT_T1SYNC                        00000002
NOT_TO                            00000004
NOT_WPUEN                         00000007
NO_MEM_OVERWRITE                  0000013A
OERR                              00000001
OPTION_REG                        00000095
OSCCON                            00000099
OSCCON_Value                      000000F0
OSCSTAT                           0000009A
OSCTUNE                           00000098
OSFIE                             00000007
OSFIF                             00000007
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 52

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

OSTS                              00000005
P                                 00000004
P1CSEL                            00000001
P1DC0                             00000000
P1DC1                             00000001
P1DC2                             00000002
P1DC3                             00000003
P1DC4                             00000004
P1DC5                             00000005
P1DC6                             00000006
P1DSEL                            00000002
P1M0                              00000006
P1M1                              00000007
P1RSEN                            00000007
P2BSEL                            00000004
P2DC0                             00000000
P2DC1                             00000001
P2DC2                             00000002
P2DC3                             00000003
P2DC4                             00000004
P2DC5                             00000005
P2DC6                             00000006
P2M0                              00000006
P2M1                              00000007
P2RSEN                            00000007
PCIE                              00000006
PCL                               00000002
PCLATH                            0000000A
PCLATH_SHAD                       00000FE7
PCON                              00000096
PEIE                              00000006
PEN                               00000002
PIE1                              00000091
PIE2                              00000092
PIE3                              00000093
PIE4                              00000094
PIR1                              00000011
PIR2                              00000012
PIR3                              00000013
PIR4                              00000014
PLLR                              00000006
PORTA                             0000000C
PORTB                             0000000D
PR2                               0000001B
PR2_Value                         0000007D
PR4                               00000416
PR6                               0000041D
PS0                               00000000
PS1                               00000001
PS2                               00000002
PSA                               00000003
PSS1AC0                           00000002
PSS1AC1                           00000003
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 53

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

PSS1BD0                           00000000
PSS1BD1                           00000001
PSS2AC0                           00000002
PSS2AC1                           00000003
PSS2BD0                           00000000
PSS2BD1                           00000001
PSTR1CON                          00000296
PSTR2CON                          0000029D
PWM1CON                           00000294
PWM2CON                           0000029B
Param70                           00000070
Param71                           00000071
Param72                           00000072
Param73                           00000073
Param74                           00000074
Param75                           00000075
Param76                           00000076
Param77                           00000077
Param78                           00000078
Param79                           00000079
Param7A                           0000007A
Param7B                           0000007B
Param7C                           0000007C
Param7D                           0000007D
Param7E                           0000007E
Param7F                           0000007F
PortADDRBits                      0000003F
PortAValue                        000000C0
PortBDDRBits                      000000D2
PortBValue                        00000004
RA0                               00000000
RA0_IO                            LATA,0
RA1                               00000001
RA1_IO                            LATA,1
RA2                               00000002
RA2_IO                            LATA,2
RA3                               00000003
RA3_IO                            LATA,3
RA4                               00000004
RA5                               00000005
RA5_In                            PORTA,5
RA6                               00000006
RA7                               00000007
RB0                               00000000
RB1                               00000001
RB1_In                            PORTB,1
RB2                               00000002
RB3                               00000003
RB4                               00000004
RB4_In                            PORTB,4
RB5                               00000005
RB6                               00000006
RB6_In                            PORTB,6
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 54

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

RB7                               00000007
RB7_In                            PORTB,7
RCEN                              00000003
RCIDL                             00000006
RCIE                              00000005
RCIF                              00000005
RCREG                             00000199
RCSTA                             0000019D
RD                                00000000
RSEN                              00000001
RST_Out                           LATA,7
RX9                               00000006
RX9D                              00000000
RXDTSEL                           00000007
RX_ELEMENTS                       00000008
R_ADDRESS                         000000EB
R_Add_ACK                         000000F1
R_DATA                            000000FE
R_Data_NACK                       00000114
R_NOT_W                           00000002
R_PastEnd                         0000010D
RevDirection                      00000002
RunMotorTest                      Flags,1
S                                 00000003
SBCDE                             00000002
SBOREN                            00000007
SCIE                              00000005
SCKP                              00000004
SCS0                              00000000
SCS1                              00000001
SDAHT                             00000003
SDO1SEL                           00000006
SEN                               00000000
SENDB                             00000003
SKPB                              
SKPNB                             
SMP                               00000007
SPBRG                             0000019B
SPBRGH                            0000019C
SPBRGL                            0000019B
SPEN                              00000007
SPLLEN                            00000007
SRCLK0                            00000004
SRCLK1                            00000005
SRCLK2                            00000006
SRCON0                            0000011A
SRCON1                            0000011B
SREN                              00000005
SRLEN                             00000007
SRNQEN                            00000002
SRPR                              00000000
SRPS                              00000001
SRQEN                             00000003
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 55

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

SRRC1E                            00000000
SRRC2E                            00000001
SRRCKE                            00000002
SRRPE                             00000003
SRSC1E                            00000004
SRSC2E                            00000005
SRSCKE                            00000006
SRSPE                             00000007
SS1SEL                            00000005
SSP1ADD                           00000212
SSP1BUF                           00000211
SSP1CON1                          00000215
SSP1CON2                          00000216
SSP1CON3                          00000217
SSP1IE                            00000003
SSP1IF                            00000003
SSP1MSK                           00000213
SSP1STAT                          00000214
SSP2ADD                           0000021A
SSP2BUF                           00000219
SSP2CON1                          0000021D
SSP2CON2                          0000021E
SSP2CON3                          0000021F
SSP2IE                            00000000
SSP2IF                            00000000
SSP2MSK                           0000021B
SSP2STAT                          0000021C
SSPADD                            00000212
SSPBUF                            00000211
SSPCON                            00000215
SSPCON1                           00000215
SSPCON2                           00000216
SSPCON3                           00000217
SSPEN                             00000005
SSPM0                             00000000
SSPM1                             00000001
SSPM2                             00000002
SSPM3                             00000003
SSPMSK                            00000213
SSPOV                             00000006
SSPSTAT                           00000214
STATUS                            00000003
STATUS_SHAD                       00000FE4
STKOVF                            00000007
STKPTR                            00000FED
STKUNF                            00000006
STR1A                             00000000
STR1B                             00000001
STR1C                             00000002
STR1D                             00000003
STR1SYNC                          00000004
STR2A                             00000000
STR2B                             00000001
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 56

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

STR2C                             00000002
STR2D                             00000003
STR2SYNC                          00000004
SUBBF                             
SW1_Flag                          SysFlags,0
SW1_In                            PORTA,4
SWDTEN                            00000000
SYNC                              00000004
SaveParams                        0000005C
SaveParams_L1                     00000061
SendingIdx                        0000002E
Servo_AddrDataMask                000000F8
StartedIt                         Flags,0
Step_Bit                          LATB,3
StepsToGoXHi                      00000039
StepsToGoXLo                      00000038
SysFlags                          00000032
T0CS                              00000005
T0IE                              00000005
T0IF                              00000002
T0SE                              00000004
T0XCS                             00000000
T1CKPS0                           00000004
T1CKPS1                           00000005
T1CON                             00000018
T1CON_Val                         00000021
T1GCON                            00000019
T1GGO                             00000003
T1GGO_NOT_DONE                    00000003
T1GPOL                            00000006
T1GSPM                            00000004
T1GSS0                            00000000
T1GSS1                            00000001
T1GTM                             00000005
T1GVAL                            00000002
T1OSCEN                           00000003
T1OSCR                            00000007
T2CKPS0                           00000000
T2CKPS1                           00000001
T2CON                             0000001C
T2CON_Value                       0000004F
T2OUTPS0                          00000003
T2OUTPS1                          00000004
T2OUTPS2                          00000005
T2OUTPS3                          00000006
T4CKPS0                           00000000
T4CKPS1                           00000001
T4CON                             00000417
T4OUTPS0                          00000003
T4OUTPS1                          00000004
T4OUTPS2                          00000005
T4OUTPS3                          00000006
T6CKPS0                           00000000
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 57

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

T6CKPS1                           00000001
T6CON                             0000041E
T6OUTPS0                          00000003
T6OUTPS1                          00000004
T6OUTPS2                          00000005
T6OUTPS3                          00000006
TMR0                              00000015
TMR0CS                            00000005
TMR0IE                            00000005
TMR0IF                            00000002
TMR0SE                            00000004
TMR0Val                           000000B2
TMR1                              00000016
TMR1CS0                           00000006
TMR1CS1                           00000007
TMR1GE                            00000007
TMR1GIE                           00000007
TMR1GIF                           00000007
TMR1H                             00000017
TMR1IE                            00000000
TMR1IF                            00000000
TMR1L                             00000016
TMR1ON                            00000000
TMR2                              0000001A
TMR2IE                            00000001
TMR2IF                            00000001
TMR2ON                            00000002
TMR2_Done                         0000001E
TMR2_End                          0000001F
TMR4                              00000415
TMR4IE                            00000001
TMR4IF                            00000001
TMR4ON                            00000002
TMR6                              0000041C
TMR6IE                            00000003
TMR6IF                            00000003
TMR6ON                            00000002
TOSH                              00000FEF
TOSL                              00000FEE
TRISA                             0000008C
TRISA0                            00000000
TRISA1                            00000001
TRISA2                            00000002
TRISA3                            00000003
TRISA4                            00000004
TRISA5                            00000005
TRISA6                            00000006
TRISA7                            00000007
TRISB                             0000008D
TRISB0                            00000000
TRISB1                            00000001
TRISB2                            00000002
TRISB3                            00000003
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 58

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

TRISB4                            00000004
TRISB5                            00000005
TRISB6                            00000006
TRISB7                            00000007
TRMT                              00000001
TSEN                              00000005
TSRNG                             00000004
TUN0                              00000000
TUN1                              00000001
TUN2                              00000002
TUN3                              00000003
TUN4                              00000004
TUN5                              00000005
TX9                               00000006
TX9D                              00000000
TXCKSEL                           00000000
TXEN                              00000005
TXIE                              00000004
TXIF                              00000004
TXREG                             0000019A
TXSTA                             0000019E
TX_DataSize                       Param71
TX_ELEMENTS                       0000000A
TestT1_Zero                       00000086
TestT2_Zero                       00000083
TestT3_Zero                       00000080
TestT4_Zero                       0000007D
TestTimerIsZero                   
Timer1Hi                          00000026
Timer1Lo                          00000025
Timer2Hi                          00000028
Timer2Lo                          00000027
Timer3Hi                          0000002A
Timer3Lo                          00000029
Timer4Hi                          0000002C
Timer4Lo                          0000002B
TimerI2C                          00000025
UA                                00000001
UseEEParams                       00000001
W                                 00000000
WCOL                              00000007
WDTCON                            00000097
WDTPS0                            00000001
WDTPS1                            00000002
WDTPS2                            00000003
WDTPS3                            00000004
WDTPS4                            00000005
WPUA                              0000020C
WPUA5                             00000005
WPUB                              0000020D
WPUB0                             00000000
WPUB1                             00000001
WPUB2                             00000002
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 59

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

WPUB3                             00000003
WPUB4                             00000004
WPUB5                             00000005
WPUB6                             00000006
WPUB7                             00000007
WR                                00000001
WREG                              00000009
WREG_SHAD                         00000FE5
WREN                              00000002
WRERR                             00000003
WUE                               00000001
W_ACK                             0000011C
W_ADDRESS                         00000118
W_DATA                            0000011E
W_Data_Stop                       00000138
Z                                 00000002
Z_SHAD                            00000002
_.org_2_00A7                      000000A7
_BOREN_NSLEEP                     0000FDFF
_BOREN_OFF                        0000F9FF
_BOREN_ON                         0000FFFF
_BOREN_SBODEN                     0000FBFF
_BORV_19                          0000FFFF
_BORV_HI                          0000FBFF
_BORV_LO                          0000FFFF
_C                                STATUS,C
_CLKOUTEN_OFF                     0000FFFF
_CLKOUTEN_ON                      0000F7FF
_CONFIG1                          00008007
_CONFIG2                          00008008
_CPD_OFF                          0000FFFF
_CPD_ON                           0000FEFF
_CP_OFF                           0000FFFF
_CP_ON                            0000FF7F
_DEVID1                           00008006
_FCMEN_OFF                        0000DFFF
_FCMEN_ON                         0000FFFF
_FOSC_ECH                         0000FFFF
_FOSC_ECL                         0000FFFD
_FOSC_ECM                         0000FFFE
_FOSC_EXTRC                       0000FFFB
_FOSC_HS                          0000FFFA
_FOSC_INTOSC                      0000FFFC
_FOSC_LP                          0000FFF8
_FOSC_XT                          0000FFF9
_IDLOC0                           00008000
_IDLOC1                           00008001
_IDLOC2                           00008002
_IDLOC3                           00008003
_IESO_OFF                         0000EFFF
_IESO_ON                          0000FFFF
_LVP_OFF                          0000DFFF
_LVP_ON                           0000FFFF
MPASM 5.64  /PROJECTS/EASYDRIVERTEST/FIRMWAR   12-14-2015  17:33:21         PAGE 60

F648A Macros
SYMBOL TABLE
  LABEL                             VALUE 

_MCLRE_OFF                        0000FFBF
_MCLRE_ON                         0000FFFF
_PLLEN_OFF                        0000FEFF
_PLLEN_ON                         0000FFFF
_PWRTE_OFF                        0000FFFF
_PWRTE_ON                         0000FFDF
_STVREN_OFF                       0000FDFF
_STVREN_ON                        0000FFFF
_WDTE_NSLEEP                      0000FFF7
_WDTE_OFF                         0000FFE7
_WDTE_ON                          0000FFFF
_WDTE_SWDTEN                      0000FFEF
_WRT_ALL                          0000FFFC
_WRT_BOOT                         0000FFFE
_WRT_HALF                         0000FFFD
_WRT_OFF                          0000FFFF
_Z                                STATUS,Z
__16F1847                         00000001
kMaxSpeed                         00000066
kUseDSTable                       00000000
kUseTable2                        00000001
kUseTable5                        00000000
kUseVSTable                       00000001
mCall0To1                         
mCall0To2                         
mCall0To3                         
mCall1To0                         
mCall1To2                         
mCall1To3                         
mCall2To0                         
mCall2To1                         
mCall2To3                         
mCall3To0                         
mCall3To1                         
mCall3To2                         
mPCLGoto                          
nvFirstParamByte                  nvI2CAddr
nvI2CAddr                         00000000
nvLastParamByte                   nvMaxSpd
nvMaxSpd                          00000002
nvMinSpd                          00000001
oldCode                           00000000
runTestAtStartup                  00000000
start                             0000013C
useI2CISR                         00000001
useI2CWDT                         00000001
useMotorTest                      00000000

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :    80 reported,     0 suppressed

